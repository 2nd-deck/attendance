{"version":3,"sources":["fbase.js","components/Input.js","routes/Auth.js","components/AddMember.js","components/DelMember.js","components/Send.js","components/SaveDate.js","components/MemList.js","components/AddClass.js","components/DelClass.js","components/ClassList.js","components/New.js","routes/Home.js","routes/Profile.js","routes/Edit.js","routes/About.js","nav/RightNav.jsx","nav/Burger.jsx","nav/Navbar.jsx","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","authService","auth","dbService","firestore","firebaseInstance","Input","type","placeholder","onChange","Container","StyledInput","requrired","autoComplete","Status","styled","input","div","Form","form","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onSubmit","event","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","name","required","value","e","target","onClick","prev","AddMember","colName","groupData","groupName","newMember","setNewMember","newPhone","setNewPhone","newKorean","setNewKorean","push","phone","korean","group","doc","set","DelButton","DelMember","eachName","deleteMem","idx","findIndex","item","splice","Send","profile","each","timeArray","Date","toLocaleTimeString","split","newTime","finalMessage","console","log","myHeaders","Headers","append","raw","JSON","stringify","userId","myphone","phoneNum","fetch","method","headers","body","redirect","then","response","text","result","catch","SaveDate","dateInfo","dateNow","today","toLocaleDateString","year","month","substring","date","length","newDateInfo","yearMonth","Name","collection","attend","every","Membutton","button","DelMem","MemList","mode","memberList","map","window","confirm","disabled","AddClass","groupList","classGroup","setClassGroup","merge","alert","DelClass","history","useHistory","deleteClass","update","FieldValue","delete","Container1","Container2","Classes","ClassButton","props","eachGroup","css","ClassList","setGroupName","Object","keys","sort","listGroups","create","New","userObj","uid","createNew","Home","Profile","myPhoneInfo","setMyPhoneInfo","signOut","Edit","About","Ul","ul","open","RightNav","to","StyledBurger","Burger","setOpen","Nav","nav","Navbar","AppRouter","isLoggedIn","exact","path","Wrapper","App","init","setInit","setIsLoggedIn","setUserObj","setColName","setGroup","setGroupData","useEffect","onAuthStateChanged","user","onSnapshot","snapshot","colNameArray","docs","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1089b29.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n//   create-react-app으로 만들어 환경변수를 사용하려면 REACT_APP_'환경변수'로 해야한다.\r\n// git ignore에 .env를 추가해서 github에 추가되는것을 막는다. 빌드하면 결국은 변환되어 값이 나타나므로 보안사항은 아니고\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const firebaseInstance = firebase;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Input = ({ type, placeholder, onChange }) => {\r\n    return (\r\n        <Container>\r\n            <StyledInput\r\n                type={type ? type : \"text\"}\r\n                placeholder={placeholder && placeholder}\r\n                onChange={onChange}\r\n                requrired\r\n                autoComplete=\"off\"\r\n            />\r\n            <Status />\r\n        </Container>\r\n    );\r\n};\r\nconst StyledInput = styled.input`\r\n    width: 80%;\r\n    max-width: 350px;\r\n    min-width: 250px;\r\n    height: 40px;\r\n    border: none;\r\n    margin-bottom: 1rem;\r\n    background-color: #f5f5f5;\r\n    box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n    border-radius: 8px;\r\n    padding: 0 1rem;\r\n    transition: all 0.2s ease-in;\r\n    &:hover {\r\n        transform: translateY(-3px);\r\n    }\r\n`;\r\n\r\nconst Status = styled.div`\r\n    height: 10px;\r\n    width: 10px;\r\n    background: #9d9d9d;\r\n    border-radius: 10px;\r\n    margin-left: 1rem;\r\n\r\n    ${StyledInput}:focus + & {\r\n        background: #ffa689;\r\n    }\r\n    ${StyledInput}:invalid + & {\r\n        background: #fe2f75;\r\n    }\r\n    ${StyledInput}:valid + & {\r\n        background: #70edb9;\r\n    }\r\n`;\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport default Input;\r\n","import { authService } from \"../fbase\";\r\nimport React, { useState } from \"react\";\r\nimport \"./Auth.css\";\r\nimport Input from \"../components/Input\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Auth = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            }\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <Container>\r\n            <Form onSubmit={onSubmit} className=\"container1\">\r\n                <h1>Welcome</h1>\r\n                <Input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <Input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    className=\"authInput authSubmit\"\r\n                    value={newAccount ? \"Create Account\" : \"Log In\"}\r\n                />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n                <span onClick={toggleAccount} className=\"authSwitch\">\r\n                    {newAccount ? \"Sing In\" : \"Create Account\"}\r\n                </span>\r\n            </Form>\r\n        </Container>\r\n    );\r\n};\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n\r\n    justify-content: space-evenly;\r\n`;\r\nconst Form = styled.form`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 1rem;\r\n    h1 {\r\n        color: #666666;\r\n        margin-top: 2rem;\r\n        margin-bottom: 2rem;\r\n    }\r\n    button {\r\n        width: 80%;\r\n        max-width: 250px;\r\n        min-width: 250px;\r\n        height: 40px;\r\n        border: none;\r\n        margin: 1rem, 0;\r\n        box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n        border-radius: 8px;\r\n        background-color: #70edb9;\r\n        color: #fff;\r\n        font-weight: 600;\r\n        cursor: pointer;\r\n        transition: all 0.2s ease-in;\r\n        &:hover {\r\n            transform: translateY(-3px);\r\n        }\r\n    }\r\n`;\r\nexport default Auth;\r\n","import React, { useState } from \"react\";\r\nimport { dbService } from \"../fbase\";\r\nimport { Input } from \"./Input\";\r\nimport styled from \"styled-components\";\r\n\r\nconst AddMember = ({ colName, groupData, groupName }) => {\r\n    const [newMember, setNewMember] = useState(\"\");\r\n    const [newPhone, setNewPhone] = useState(\"\");\r\n    const [newKorean, setNewKorean] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        groupData[groupName].push({\r\n            name: newMember,\r\n            phone: newPhone,\r\n            korean: newKorean,\r\n            group: groupName,\r\n        });\r\n        await dbService.doc(`${colName}/Data`).set(groupData);\r\n    };\r\n\r\n    // const addData = (groupData) => {\r\n    //     groupData.push({\r\n    //         name: newMember,\r\n    //         phone: newPhone,\r\n    //         group: newGroup,\r\n    //     });\r\n    // };\r\n    return (\r\n        <div>\r\n            <Form onSubmit={onSubmit}>\r\n                <h3>Add Member</h3>\r\n                <Input\r\n                    name=\"member\"\r\n                    placeholder=\"Member Name\"\r\n                    onChange={(e) => setNewMember(e.target.value)}\r\n                />\r\n                <Input\r\n                    name=\"koreanName\"\r\n                    placeholder=\"실명\"\r\n                    onChange={(e) => setNewKorean(e.target.value)}\r\n                />\r\n                <Input\r\n                    name=\"phone\"\r\n                    type=\"phone\"\r\n                    placeholder=\"Phone Number\"\r\n                    onChange={(e) => setNewPhone(e.target.value)}\r\n                />\r\n                <button>Add</button>\r\n                {/* <input type=\"submit\" value=\"Add\" /> */}\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\nconst Form = styled.form`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    h3 {\r\n        color: #666666;\r\n        margin-top: 1rem;\r\n        margin-bottom: 1rem;\r\n    }\r\n    button {\r\n        width: 75%;\r\n        width: 80%;\r\n        max-width: 350px;\r\n        min-width: 250px;\r\n        height: 40px;\r\n        border: none;\r\n        margin: 1rem, 0;\r\n        box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n        border-radius: 8px;\r\n        background-color: #70edb9;\r\n        color: #fff;\r\n        font-weight: 600;\r\n        cursor: pointer;\r\n        transition: all 0.2s ease-in;\r\n        &:hover {\r\n            transform: translateY(-3px);\r\n        }\r\n    }\r\n`;\r\nexport default AddMember;\r\n","import React from \"react\";\r\nimport { dbService } from \"../fbase\";\r\nimport styled from \"styled-components\";\r\n\r\nconst DelMember = ({ colName, groupName, groupData, eachName }) => {\r\n    const deleteMem = async (event) => {\r\n        event.preventDefault();\r\n\r\n        //네임을 비교하여 같으면 삭제\r\n        const idx = groupData[groupName].findIndex(function (item) {\r\n            return item.name === eachName;\r\n        });\r\n        if (idx > -1) groupData[groupName].splice(idx, 1);\r\n\r\n        await dbService.doc(`${colName}/Data`).set(groupData);\r\n    };\r\n    return (\r\n        <div>\r\n            <DelButton onClick={deleteMem}>삭제</DelButton>{\" \"}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst DelButton = styled.div`\r\n    width: 100%;\r\n    text-align: center;\r\n    padding-top: 8px;\r\n    padding-left: 15px;\r\n    padding-right: 15px;\r\n\r\n    height: 40px;\r\n    border: none;\r\n    margin: 1rem, 0;\r\n    box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n    border-radius: 8px;\r\n    background-color: #ff0000;\r\n    color: #fff;\r\n    font-weight: 600;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease-in;\r\n    &:hover {\r\n        transform: translateY(-3px);\r\n    }\r\n`;\r\nexport default DelMember;\r\n","import React from \"react\";\r\n\r\nconst Send = ({ profile, each, colName }) => {\r\n    let timeNow = new Date();\r\n\r\n    let timeArray = timeNow.toLocaleTimeString().split(\":\");\r\n    let newTime = timeArray[0] + \"시\" + timeArray[1] + \"분\";\r\n    const finalMessage = `Mytree English\\n${each.name}(${each.group}) 출석하였습니다.\\n\\n출석 시간(${newTime})`;\r\n    console.log(colName);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    var raw = JSON.stringify({\r\n        userId: colName,\r\n        myphone: profile.myphone,\r\n        phoneNum: each.phone,\r\n        message: finalMessage,\r\n    });\r\n\r\n    var requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n    };\r\n\r\n    fetch(\r\n        \"https://us-central1-attendance-6c507.cloudfunctions.net/send\",\r\n        // \"http://localhost:5001/attendance-6c507/us-central1/send\",\r\n        requestOptions\r\n    )\r\n        .then((response) => response.text())\r\n        .then((result) => console.log(result))\r\n        .catch((error) => console.log(\"error\", error));\r\n    return <div></div>;\r\n};\r\n\r\nexport default Send;\r\n","import React from \"react\";\r\nimport { dbService } from \"../fbase\";\r\n\r\nconst SaveDate = async ({ each, colName, dateInfo }) => {\r\n    let dateNow = new Date();\r\n    const today = dateNow.toLocaleDateString().split(\".\");\r\n    const year = today[0];\r\n    let month = today[1].substring(1);\r\n    const date = today[2].substring(1);\r\n    if (month.length === 1) {\r\n        month = \"0\" + month;\r\n    } else {\r\n        month = today[1];\r\n    }\r\n\r\n    const yearMonth = year + month;\r\n    let newDateInfo = dateInfo;\r\n    // let setSaveInfo = [];\r\n    if (dateInfo[yearMonth]) {\r\n        if (dateInfo[yearMonth][each.Name]) {\r\n            newDateInfo[yearMonth][each.name].push(date);\r\n        } else {\r\n            newDateInfo[yearMonth][each.name] = [date];\r\n        }\r\n    } else {\r\n        newDateInfo[yearMonth] = { [each.name]: [date] };\r\n    }\r\n\r\n    // const updatedData = {\r\n    // [each.name]: setSaveInfo,\r\n    // };\r\n    // console.log(updatedData);\r\n    // coleName.date;\r\n\r\n    await dbService.collection(colName).doc(\"Date\").set(newDateInfo);\r\n\r\n    return <div></div>;\r\n};\r\n\r\nexport default SaveDate;\r\n","import React from \"react\";\r\nimport AddMember from \"./AddMember\";\r\nimport DelMember from \"./DelMember\";\r\nimport Send from \"./Send\";\r\nimport styled from \"styled-components\";\r\nimport SaveDate from \"./SaveDate\";\r\n\r\nconst MemList = ({\r\n    colName,\r\n    groupData,\r\n    groupName,\r\n    mode,\r\n    profile,\r\n    dateInfo,\r\n}) => {\r\n    // let memeberList;\r\n    const memberList = groupData[groupName].map((each) => (\r\n        <div>\r\n            <ul>\r\n                {mode === \"edit\" ? (\r\n                    <DelMem>\r\n                        <div className=\"Name\">\r\n                            {each.name}({each.korean}\r\n                            {each.phone})\r\n                        </div>\r\n\r\n                        <DelMember\r\n                            groupData={groupData}\r\n                            colName={colName}\r\n                            groupName={groupName}\r\n                            eachName={each.name}\r\n                        />\r\n                    </DelMem>\r\n                ) : (\r\n                    <Membutton\r\n                        onClick={() => {\r\n                            const result = window.confirm(\r\n                                `${each.name} 출석이 맞습니까?`\r\n                            );\r\n                            if (result) {\r\n                                SaveDate({ each, colName, dateInfo });\r\n                                Send({\r\n                                    profile,\r\n                                    each,\r\n                                    colName,\r\n                                    dateInfo,\r\n                                });\r\n                            }\r\n                        }}\r\n                        disabled={attend({ each, dateInfo })}\r\n                    >\r\n                        {each.name}\r\n                    </Membutton>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    ));\r\n\r\n    return (\r\n        <Container>\r\n            {mode === \"edit\" ? (\r\n                <div>\r\n                    <h1>Member List</h1>\r\n                    <ul>{memberList}</ul>\r\n                    <AddMember\r\n                        colName={colName}\r\n                        groupData={groupData}\r\n                        groupName={groupName}\r\n                    />\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <h1>Member List</h1>\r\n                    <ul>{memberList}</ul>\r\n                </div>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst attend = ({ each, dateInfo }) => {\r\n    let dateNow = new Date();\r\n    const today = dateNow.toLocaleDateString().split(\".\");\r\n    const year = today[0];\r\n    let month = today[1].substring(1);\r\n    const date = today[2].substring(1);\r\n    if (month.length === 1) {\r\n        month = \"0\" + month;\r\n    } else {\r\n        month = today[1];\r\n    }\r\n    const yearMonth = year + month;\r\n\r\n    // let setSaveInfo = [];\r\n    if (dateInfo[yearMonth]) {\r\n        if (dateInfo[yearMonth][each.name]) {\r\n            if (\r\n                dateInfo[yearMonth][each.name].every(function (value) {\r\n                    return value !== date;\r\n                })\r\n            ) {\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\nconst Container = styled.div`\r\n    h1 {\r\n        color: #666666;\r\n        margin-bottom: 1rem;\r\n        text-align: center;\r\n    }\r\n`;\r\nconst Membutton = styled.button`\r\n    width: 80%;\r\n    max-width: 350px;\r\n    min-width: 250px;\r\n    height: 60px;\r\n    border: none;\r\n    margin: 1rem, 0;\r\n    margin-bottom: 2rem;\r\n    box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n    border-radius: 8px;\r\n    background-color: #70edb9;\r\n    color: #fff;\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease-in;\r\n    &:hover {\r\n        transform: translateY(-3px);\r\n    }\r\n    &:disabled {\r\n        background-color: #fe2f75;\r\n    }\r\n`;\r\nconst DelMem = styled.div`\r\n    display: flex;\r\n    margin-bottom: 1rem;\r\n    .Name {\r\n        width: 80%;\r\n        text-align: center;\r\n        padding-top: 8px;\r\n        max-width: 350px;\r\n        min-width: 250px;\r\n        height: 40px;\r\n        border: none;\r\n        margin: 1rem, 0;\r\n\r\n        box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n        border-radius: 8px;\r\n        background-color: #9d9d9d;\r\n        color: #fff;\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nexport default MemList;\r\n","import React, { useState } from \"react\";\r\nimport { dbService } from \"../fbase\";\r\nimport styled from \"styled-components\";\r\nimport Input from \"./Input\";\r\n\r\nconst AddClass = ({ colName, groupData, groupList }) => {\r\n    const [classGroup, setClassGroup] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (\r\n            groupList.every(function (value) {\r\n                return value !== classGroup;\r\n            })\r\n        ) {\r\n            await dbService\r\n                .collection(colName)\r\n                .doc(\"Data\")\r\n                .set(\r\n                    {\r\n                        [classGroup]: [],\r\n                    },\r\n                    { merge: true }\r\n                );\r\n        } else {\r\n            window.alert(\"동일한 그룹명이 존재합니다.\");\r\n            return;\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            <Form onSubmit={onSubmit}>\r\n                <h3>Add Class</h3>\r\n                <Input\r\n                    name=\"classGroup\"\r\n                    placeholder=\"Class Name\"\r\n                    onChange={(e) => setClassGroup(e.target.value)}\r\n                />\r\n                <button>ADD</button>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Form = styled.form`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 1rem;\r\n    h3 {\r\n        color: #666666;\r\n        margin-top: 0rem;\r\n        margin-bottom: 1rem;\r\n    }\r\n    button {\r\n        width: 80%;\r\n        max-width: 350px;\r\n        min-width: 250px;\r\n        height: 40px;\r\n        border: none;\r\n        margin: 1rem, 0;\r\n        box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n        border-radius: 8px;\r\n        background-color: #70edb9;\r\n        color: #fff;\r\n        font-weight: 600;\r\n        cursor: pointer;\r\n        transition: all 0.2s ease-in;\r\n        &:hover {\r\n            transform: translateY(-3px);\r\n        }\r\n    }\r\n`;\r\n\r\nexport default AddClass;\r\n","import React from \"react\";\r\nimport { dbService, firebaseInstance } from \"../fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst DelClass = ({ colName, groupName, groupData }) => {\r\n    const history = useHistory();\r\n    const deleteClass = async (event) => {\r\n        event.preventDefault();\r\n\r\n        //네임을 비교하여 같으면 삭제\r\n        await dbService.doc(`${colName}/Data`).update({\r\n            [groupName]: firebaseInstance.firestore.FieldValue.delete(),\r\n        });\r\n\r\n        history.push(\"/edit\");\r\n    };\r\n    return (\r\n        <Container>\r\n            <h3>Delete Class</h3>\r\n            <button onClick={deleteClass}>선택 삭제({groupName})</button>{\" \"}\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 4rem;\r\n    h3 {\r\n        color: #666666;\r\n        margin-top: 2rem;\r\n        margin-bottom: 1rem;\r\n    }\r\n    button {\r\n        width: 80%;\r\n        max-width: 350px;\r\n        min-width: 250px;\r\n        height: 40px;\r\n        border: none;\r\n        margin: 1rem, 0;\r\n        box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n        border-radius: 8px;\r\n        background-color: #1c1939;\r\n        color: #fff;\r\n        font-weight: 600;\r\n        cursor: pointer;\r\n        transition: all 0.2s ease-in;\r\n        &:hover {\r\n            transform: translateY(-3px);\r\n        }\r\n    }\r\n`;\r\n\r\nexport default DelClass;\r\n","import React, { useState } from \"react\";\r\nimport MemList from \"./MemList\";\r\nimport AddClass from \"../components/AddClass\";\r\nimport DelClass from \"../components/DelClass\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst ClassList = ({ group, groupData, colName, mode, profile, dateInfo }) => {\r\n    //key값 나열\r\n    const [groupName, setGroupName] = useState(\"\");\r\n    const groupList = Object.keys(groupData);\r\n    groupList.sort();\r\n    const create = (eachGroup) => {\r\n        setGroupName(eachGroup);\r\n    };\r\n    const listGroups = groupList.map((eachGroup) => (\r\n        <ClassButton\r\n            eachGroup={eachGroup}\r\n            groupName={groupName}\r\n            onClick={() => create(eachGroup)}\r\n        >\r\n            {eachGroup}\r\n        </ClassButton>\r\n    ));\r\n\r\n    return (\r\n        <Container>\r\n            <Container1>\r\n                <h1>Class List</h1>\r\n                <Classes>\r\n                    <ul>{listGroups}</ul>\r\n                </Classes>\r\n                {/* {groupData[groupName] ? (\r\n                    <div>\r\n                        {groupName}\r\n                        <MemList\r\n                            groupName={groupName}\r\n                            colName={colName}\r\n                            groupData={groupData}\r\n                            mode={mode}\r\n                            profile={profile}\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                    \"\"\r\n                )} */}\r\n\r\n                {mode === \"edit\" ? (\r\n                    <div>\r\n                        <AddClass\r\n                            groupList={groupList}\r\n                            group={group}\r\n                            groupData={groupData}\r\n                            colName={colName}\r\n                        />\r\n\r\n                        {groupName ? (\r\n                            <DelClass\r\n                                groupData={groupData}\r\n                                colName={colName}\r\n                                groupName={groupName}\r\n                            />\r\n                        ) : (\r\n                            \"\"\r\n                        )}\r\n                    </div>\r\n                ) : (\r\n                    <div></div>\r\n                )}\r\n            </Container1>\r\n\r\n            {groupData[groupName] ? (\r\n                <Container2>\r\n                    <MemList\r\n                        groupName={groupName}\r\n                        colName={colName}\r\n                        groupData={groupData}\r\n                        mode={mode}\r\n                        profile={profile}\r\n                        dateInfo={dateInfo}\r\n                    />\r\n                </Container2>\r\n            ) : (\r\n                \"\"\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    display: --webkit-flex;\r\n    display: flex;\r\n    -webkit-flex-flow: row wrap;\r\n    flex-flow: row wrap;\r\n    width: 100%;\r\n\r\n    @media (min-width: 900px) {\r\n        width: 900px;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n    }\r\n`;\r\n\r\nconst Container1 = styled.div`\r\n    width: 100%;\r\n    /* height: 100%; */\r\n    display: flex;\r\n    flex-direction: column;\r\n    /* justify-content: center; */\r\n    align-items: center;\r\n    margin-bottom: 1rem;\r\n    h1 {\r\n        color: #666666;\r\n        margin-bottom: 0.5rem;\r\n    }\r\n    @media (min-width: 900px) {\r\n        width: 50%;\r\n        margin-bottom: 0rem;\r\n    }\r\n`;\r\nconst Container2 = styled.div`\r\n    width: 100%;\r\n    /* height: 100%; */\r\n    display: flex;\r\n    flex-direction: column;\r\n    /* margin-top: 2rem; */\r\n    justify-content: default(flex-start);\r\n    align-items: center;\r\n    @media (min-width: 900px) {\r\n        width: 50%;\r\n    }\r\n`;\r\n\r\nconst Classes = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    flex-flow: wrap;\r\n\r\n    margin-bottom: 3rem;\r\n`;\r\nconst ClassButton = styled.button`\r\n    /* display: flex;\r\n    flex-direction: row;\r\n    align-items: center; */\r\n\r\n    width: 10%;\r\n    max-width: 100px;\r\n    min-width: 80px;\r\n    height: 50px;\r\n    border: none;\r\n    margin-right: 0.5rem;\r\n    margin-top: 0.5rem;\r\n    box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n    border-radius: 8px;\r\n    /* background-color: #7165e3; */\r\n    background-color: #7165e3;\r\n    ${(props) =>\r\n        props.eachGroup === props.groupName\r\n            ? css`\r\n                  background-color: #ffa689;\r\n              `\r\n            : css`\r\n                  background-color: #7165e3;\r\n              `};\r\n    color: #fff;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease-in;\r\n    &:hover {\r\n        transform: translateY(-3px);\r\n    }\r\n    &:focus {\r\n        background: #ffa689;\r\n    }\r\n`;\r\n\r\nexport default ClassList;\r\n","import { dbService } from \"../fbase\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst New = ({ userObj }) => {\r\n    const colName = userObj.uid.substring(0, 9);\r\n    const createNew = async () => {\r\n        await dbService.collection(colName).doc(\"Data\").set({});\r\n        await dbService.collection(colName).doc(\"Profile\").set({\r\n            myphone: \"My Phone Number\",\r\n        });\r\n        await dbService.collection(colName).doc(\"Date\").set({});\r\n    };\r\n    return (\r\n        <Container>\r\n            <h1>새로 시작하기</h1>\r\n            <button onClick={createNew}>START</button>\r\n        </Container>\r\n    );\r\n};\r\nconst Container = styled.div`\r\n    h1 {\r\n        color: #666666;\r\n        margin-bottom: 1rem;\r\n        text-align: center;\r\n    }\r\n    button {\r\n        width: 80%;\r\n        max-width: 350px;\r\n        min-width: 250px;\r\n        height: 40px;\r\n        border: none;\r\n        margin: 1rem, 0;\r\n        margin-bottom: 0.5rem;\r\n        box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n        border-radius: 8px;\r\n        background-color: #70edb9;\r\n        color: #fff;\r\n        font-size: 24px;\r\n        font-weight: 600;\r\n        cursor: pointer;\r\n        transition: all 0.2s ease-in;\r\n        &:hover {\r\n            transform: translateY(-3px);\r\n        }\r\n    }\r\n`;\r\nexport default New;\r\n","import React from \"react\";\r\n// import \"./Home.css\";\r\nimport ClassList from \"../components/ClassList\";\r\nimport New from \"../components/New\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Home = ({ userObj, group, groupData, colName, profile, dateInfo }) => {\r\n    const mode = \"send\";\r\n    return (\r\n        <Container>\r\n            {group ? (\r\n                <div>\r\n                    <ClassList\r\n                        group={group}\r\n                        groupData={groupData}\r\n                        colName={colName}\r\n                        mode={mode}\r\n                        profile={profile}\r\n                        dateInfo={dateInfo}\r\n                    />\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <New userObj={userObj} />\r\n                </div>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n\r\n    justify-content: space-evenly;\r\n`;\r\n\r\nexport default Home;\r\n","import { authService, dbService } from \"../fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Input from \"../components/Input\";\r\nimport styled from \"styled-components\";\r\n\r\n// import \"./Profile.css\";\r\n\r\nconst Profile = ({ colName, profile }) => {\r\n    const history = useHistory();\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    const [myPhoneInfo, setMyPhoneInfo] = useState(\"\");\r\n\r\n    // const onChange = (event) => {\r\n    //     const {\r\n    //         target: { name, value },\r\n    //     } = event;\r\n    //     if (name === \"myphone\") {\r\n    //         setMyPhoneInfo(value);\r\n    //     }\r\n    // };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        await dbService.doc(`${colName}/Profile`).set({\r\n            myphone: myPhoneInfo,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <Form onSubmit={onSubmit}>\r\n                    <h3>My Phone Number: {profile.myphone}</h3>\r\n                    <Input\r\n                        name=\"myphone\"\r\n                        placeholder=\"My phone Number\"\r\n                        onChange={(e) => setMyPhoneInfo(e.target.value)}\r\n                    />\r\n\r\n                    <button>Change</button>\r\n                </Form>\r\n            </div>\r\n            <Form>\r\n                <h3>LogOut</h3>\r\n                <button onClick={onLogOutClick}>Log Out</button>\r\n            </Form>\r\n            {/* <div>\r\n                <Link to=\"/editClass\">\r\n                    <span>Edit Class</span>\r\n                </Link>\r\n              \r\n            </div> */}\r\n        </>\r\n    );\r\n};\r\n\r\nconst Form = styled.form`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 1rem;\r\n    h3 {\r\n        color: #666666;\r\n        margin-top: 2rem;\r\n        margin-bottom: 1rem;\r\n    }\r\n    button {\r\n        width: 80%;\r\n        max-width: 250px;\r\n        min-width: 250px;\r\n        height: 40px;\r\n        border: none;\r\n        margin: 1rem, 0;\r\n        box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n        border-radius: 8px;\r\n        background-color: #70edb9;\r\n        color: #fff;\r\n        font-weight: 600;\r\n        cursor: pointer;\r\n        transition: all 0.2s ease-in;\r\n        &:hover {\r\n            transform: translateY(-3px);\r\n        }\r\n    }\r\n`;\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport ClassList from \"../components/ClassList\";\r\nimport styled from \"styled-components\";\r\nconst Edit = ({ group, groupData, colName, dateInfo }) => {\r\n    const mode = \"edit\";\r\n    return (\r\n        <>\r\n            <Container>\r\n                <ClassList\r\n                    group={group}\r\n                    groupData={groupData}\r\n                    colName={colName}\r\n                    mode={mode}\r\n                    dateInfo={dateInfo}\r\n                />\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n\r\n    justify-content: space-evenly;\r\n`;\r\nexport default Edit;\r\n","import React from \"react\";\r\nimport \"./About.css\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction About(props) {\r\n    return (\r\n        <Container>\r\n            <span>2nd Deck</span>\r\n        </Container>\r\n    );\r\n}\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n\r\n    justify-content: space-evenly;\r\n`;\r\nexport default About;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Ul = styled.ul`\r\n    list-style: none;\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    a {\r\n        padding: 18px 10px;\r\n        text-decoration: none;\r\n        color: #0008fc;\r\n        text-transform: uppercase;\r\n        font-size: 12px;\r\n        text-align: center;\r\n        font-weight: 600;\r\n    }\r\n    @media (max-width: 768px) {\r\n        flex-flow: column nowrap;\r\n        background-color: #eefcff;\r\n        position: fixed;\r\n        transform: ${({ open }) =>\r\n            open ? \"translateX(0)\" : \"translateX(100%)\"};\r\n        top: 0;\r\n        right: 0;\r\n        height: 100vh;\r\n        width: 150px;\r\n        padding-top: 3.5rem;\r\n        transition: transform 0.3s ease-in-out;\r\n        a {\r\n            color: #13a326;\r\n            text-transform: uppercase;\r\n            font-size: 12px;\r\n            text-align: center;\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n\r\nconst RightNav = ({ open }) => {\r\n    return (\r\n        <Ul open={open}>\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/profile\">Profile</Link>\r\n            <Link to=\"/edit\">Edit</Link>\r\n            <Link to=\"/about\">About</Link>\r\n            {/* <li>Sign Up</li> */}\r\n        </Ul>\r\n    );\r\n};\r\n\r\nexport default RightNav;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport RightNav from \"./RightNav\";\r\n\r\nconst StyledBurger = styled.div`\r\n    width: 2rem;\r\n    height: 2rem;\r\n    position: fixed;\r\n    top: 15px;\r\n    right: 20px;\r\n    z-index: 20;\r\n    display: none;\r\n    @media (max-width: 768px) {\r\n        display: flex;\r\n        justify-content: space-around;\r\n        flex-flow: column nowrap;\r\n    }\r\n    div {\r\n        width: 2rem;\r\n        height: 0.25rem;\r\n        background-color: ${({ open }) => (open ? \"#ccc\" : \"#333\")};\r\n        border-radius: 10px;\r\n        transform-origin: 1px;\r\n        transition: all 0.3s linear;\r\n        &:nth-child(1) {\r\n            transform: ${({ open }) => (open ? \"rotate(45deg)\" : \"rotate(0)\")};\r\n        }\r\n        &:nth-child(2) {\r\n            transform: ${({ open }) =>\r\n                open ? \"translateX(100%)\" : \"translateX(0)\"};\r\n            opacity: ${({ open }) => (open ? 0 : 1)};\r\n        }\r\n        &:nth-child(3) {\r\n            transform: ${({ open }) => (open ? \"rotate(-45deg)\" : \"rotate(0)\")};\r\n        }\r\n    }\r\n`;\r\n\r\nconst Burger = () => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <StyledBurger open={open} onClick={() => setOpen(!open)}>\r\n                <div />\r\n                <div />\r\n                <div />\r\n            </StyledBurger>\r\n            <RightNav open={open} />\r\n        </>\r\n    );\r\n};\r\nexport default Burger;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Burger from \"./Burger\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Nav = styled.nav`\r\n    width: 100%;\r\n    height: 55px;\r\n    border-bottom: 2px solid #f1f1f1;\r\n    padding: 0 20px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    .logo {\r\n        padding: 15px 0;\r\n        color: #48484d;\r\n        font-size: 25px;\r\n        font-weight: 600;\r\n        text-decoration: none;\r\n    }\r\n`;\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <Nav>\r\n            <Link to=\"/\" className=\"logo\">\r\n                MY TREE ENGLISH\r\n            </Link>\r\n\r\n            <Burger />\r\n        </Nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Profile from \"../routes/Profile\";\r\nimport Edit from \"../routes/Edit\";\r\nimport About from \"../routes/About\";\r\n// import Navigation from \"./Navigation\";\r\nimport Navbar from \"../nav/Navbar\";\r\nimport styled from \"styled-components\";\r\n// import \"./App.css\";\r\n\r\nconst AppRouter = ({\r\n    isLoggedIn,\r\n    userObj,\r\n    group,\r\n    groupData,\r\n    colName,\r\n    profile,\r\n    dateInfo,\r\n}) => {\r\n    return (\r\n        <Router>\r\n            {/* {isLoggedIn && <Navigation />} */}\r\n            {isLoggedIn && <Navbar />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <Container>\r\n                        <Route exact path=\"/\">\r\n                            <Home\r\n                                userObj={userObj}\r\n                                group={group}\r\n                                groupData={groupData}\r\n                                colName={colName}\r\n                                profile={profile}\r\n                                dateInfo={dateInfo}\r\n                            />\r\n                        </Route>\r\n                        <Route exact path=\"/about\">\r\n                            <About />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile colName={colName} profile={profile} />\r\n                        </Route>\r\n                        <Route exact path=\"/edit\">\r\n                            <Edit\r\n                                group={group}\r\n                                groupData={groupData}\r\n                                colName={colName}\r\n                                dateInfo={dateInfo}\r\n                            />\r\n                        </Route>\r\n                        {/* <Route exact path=\"/editClass\">\r\n                            <EditClass\r\n                                group={group}\r\n                                groupData={groupData}\r\n                                colName={colName}\r\n                            />\r\n                        </Route> */}\r\n                        {/* <Route exact path=\"/editMem\">\r\n                            <EditMem\r\n                                group={group}\r\n                                groupData={groupData}\r\n                                colName={colName}\r\n                            />\r\n                        </Route> */}\r\n                    </Container>\r\n                ) : (\r\n                    <Container>\r\n                        <Route exact path=\"/\">\r\n                            <Auth />\r\n                        </Route>\r\n                    </Container>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\nconst Container = styled.div`\r\n    padding: 30px;\r\n    min-width: 350px;\r\n`;\r\n\r\nexport default AppRouter;\r\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService, dbService } from \"../fbase\";\nimport styled from \"styled-components\";\n// import bgImg from \"../assets/bg.png\";\n\nconst App = () => {\n    const [init, setInit] = useState(false);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [userObj, setUserObj] = useState(null);\n    const [colName, setColName] = useState(\"\");\n    const [group, setGroup] = useState(false);\n    const [groupData, setGroupData] = useState([]);\n\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if (user) {\n                setIsLoggedIn(true);\n                setUserObj(user);\n            } else {\n                setIsLoggedIn(false);\n            }\n            setInit(true);\n        });\n    }, [isLoggedIn]);\n    useEffect(() => {\n        if (userObj !== null) {\n            setColName(userObj.uid.substring(0, 9));\n        }\n    }, [userObj]);\n    useEffect(() => {\n        if (colName !== \"\") {\n            dbService.collection(colName).onSnapshot((snapshot) => {\n                const colNameArray = snapshot.docs.map((doc) => ({\n                    ...doc.data(),\n                }));\n\n                setGroupData(colNameArray);\n                if (colNameArray.length !== 0) {\n                    setGroup(true);\n                }\n            });\n            // dbService\n            //     .collection(colName)\n            //     .doc(\"Profile\")\n            //     .onSnapshot((snapshot) => {\n            //         const profileInfo = snapshot.docs.map((doc) => ({\n            //             ...doc.data(),\n            //             // id: doc.id,\n            //         }));\n\n            //         setProfile(profileInfo);\n            //     });\n        }\n    }, [colName]);\n\n    return (\n        <Container>\n            <Wrapper>\n                {init ? (\n                    <AppRouter\n                        isLoggedIn={isLoggedIn}\n                        userObj={userObj}\n                        groupData={groupData[0]}\n                        profile={groupData[2]}\n                        dateInfo={groupData[1]}\n                        colName={colName}\n                        group={group}\n                    />\n                ) : (\n                    \"Initializing...\"\n                )}\n                {/* <div className=\"footer\"> */}\n                {/* <footer>&copy; {new Date().getFullYear()} 2nd-deck</footer> */}\n                {/* </div> */}\n            </Wrapper>\n        </Container>\n    );\n};\n\nconst Container = styled.div`\n    background: #ffffff;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n`;\nconst Wrapper = styled.div`\n    /* background-position: center; */\n    /* background-size: cover; */\n    /* background-repeat: no-repeat; */\n    /* background-attachment: fixed; */\n    width: 100%;\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}