{"version":3,"sources":["fbase.js","routes/Auth.js","components/Input.js","components/AddMember.js","components/DelMember.js","components/Send.js","components/MemList.js","components/AddClass.js","components/DelClass.js","components/ClassList.js","components/New.js","routes/Home.js","routes/Profile.js","routes/Edit.js","routes/About.js","nav/RightNav.jsx","nav/Burger.jsx","nav/Navbar.jsx","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","authService","auth","dbService","firestore","firebaseInstance","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Input","Container","StyledInput","requrired","autoComplete","Status","styled","input","div","Form","form","AddMember","colName","groupData","groupName","newMember","setNewMember","newPhone","setNewPhone","newKorean","setNewKorean","push","phone","korean","group","doc","set","e","DelButton","DelMember","eachName","deleteMem","idx","findIndex","item","splice","Send","profile","each","timeArray","Date","toLocaleTimeString","split","newTime","finalMessage","console","log","myHeaders","Headers","append","raw","JSON","stringify","myphone","phoneNum","fetch","method","headers","body","redirect","then","response","text","result","catch","DelMem","MemList","mode","memberList","map","window","confirm","AddClass","classGroup","setClassGroup","collection","merge","DelClass","history","useHistory","deleteClass","update","FieldValue","delete","Container1","Container2","Classes","ClassButton","button","props","eachGroup","css","ClassList","setGroupName","groupList","Object","keys","sort","listGroups","create","New","userObj","uid","substring","createNew","Home","coleName","Profile","myPhoneInfo","setMyPhoneInfo","signOut","Edit","About","Ul","ul","open","RightNav","to","StyledBurger","Burger","setOpen","Nav","nav","Navbar","AppRouter","isLoggedIn","exact","path","Wrapper","App","init","setInit","setIsLoggedIn","setUserObj","setColName","setGroup","setGroupData","useEffect","onAuthStateChanged","user","onSnapshot","snapshot","colNameArray","docs","data","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77492cf9.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n//   create-react-app으로 만들어 환경변수를 사용하려면 REACT_APP_'환경변수'로 해야한다.\r\n// git ignore에 .env를 추가해서 github에 추가되는것을 막는다. 빌드하면 결국은 변환되어 값이 나타나므로 보안사항은 아니고\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const firebaseInstance = firebase;","import { authService} from \"../fbase\";\r\nimport React, { useState } from \"react\";\r\nimport \"./Auth.css\";\r\n\r\nconst Auth = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {target : {name, value},} = event;\r\n        if (name === \"email\"){\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <form onSubmit={onSubmit} className=\"container1\">\r\n                <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\" />\r\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\" />\r\n                <input type=\"submit\" className=\"authInput authSubmit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sing In\" : \"Create Account\" }\r\n            </span>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Auth;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Input = ({ type, placeholder, onChange }) => {\r\n    return (\r\n        <Container>\r\n            <StyledInput\r\n                type={type ? type : \"text\"}\r\n                placeholder={placeholder && placeholder}\r\n                onChange={onChange}\r\n                requrired\r\n                autoComplete=\"off\"\r\n            />\r\n            <Status />\r\n        </Container>\r\n    );\r\n};\r\nconst StyledInput = styled.input`\r\n    width: 80%;\r\n    max-width: 350px;\r\n    min-width: 250px;\r\n    height: 40px;\r\n    border: none;\r\n    margin-bottom: 1rem;\r\n    background-color: #f5f5f5;\r\n    box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n    border-radius: 8px;\r\n    padding: 0 1rem;\r\n    transition: all 0.2s ease-in;\r\n    &:hover {\r\n        transform: translateY(-3px);\r\n    }\r\n`;\r\n\r\nconst Status = styled.div`\r\n    height: 10px;\r\n    width: 10px;\r\n    background: #9d9d9d;\r\n    border-radius: 10px;\r\n    margin-left: 1rem;\r\n\r\n    ${StyledInput}:focus + & {\r\n        background: #ffa689;\r\n    }\r\n    ${StyledInput}:invalid + & {\r\n        background: #fe2f75;\r\n    }\r\n    ${StyledInput}:valid + & {\r\n        background: #70edb9;\r\n    }\r\n`;\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport default Input;\r\n","import React, { useState } from \"react\";\r\nimport { dbService } from \"../fbase\";\r\nimport { Input } from \"./Input\";\r\nimport styled from \"styled-components\";\r\n\r\nconst AddMember = ({ colName, groupData, groupName }) => {\r\n    const [newMember, setNewMember] = useState(\"\");\r\n    const [newPhone, setNewPhone] = useState(\"\");\r\n    const [newKorean, setNewKorean] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if (name === \"member\") {\r\n            setNewMember(value);\r\n        } else if (name === \"phone\") {\r\n            setNewPhone(value);\r\n        } else if (name === \"koreanName\") {\r\n            setNewKorean(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        groupData[groupName].push({\r\n            name: newMember,\r\n            phone: newPhone,\r\n            korean: newKorean,\r\n            group: groupName,\r\n        });\r\n        await dbService.doc(`${colName}/Data`).set(groupData);\r\n    };\r\n\r\n    // const addData = (groupData) => {\r\n    //     groupData.push({\r\n    //         name: newMember,\r\n    //         phone: newPhone,\r\n    //         group: newGroup,\r\n    //     });\r\n    // };\r\n    return (\r\n        <div>\r\n            <Form onSubmit={onSubmit}>\r\n                <h3>Add Member</h3>\r\n                <Input\r\n                    name=\"member\"\r\n                    placeholder=\"Member Name\"\r\n                    onChange={(e) => setNewMember(e.target.value)}\r\n                />\r\n                <Input\r\n                    name=\"koreanName\"\r\n                    placeholder=\"실명\"\r\n                    onChange={(e) => setNewKorean(e.target.value)}\r\n                />\r\n                <Input\r\n                    name=\"phone\"\r\n                    placeholder=\"Phone Number\"\r\n                    onChange={(e) => setNewPhone(e.target.value)}\r\n                />\r\n                <button>Add</button>\r\n                {/* <input type=\"submit\" value=\"Add\" /> */}\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\nconst Form = styled.form`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    h3 {\r\n        color: #666666;\r\n        margin-top: 1rem;\r\n        margin-bottom: 1rem;\r\n    }\r\n    button {\r\n        width: 75%;\r\n        width: 80%;\r\n        max-width: 350px;\r\n        min-width: 250px;\r\n        height: 40px;\r\n        border: none;\r\n        margin: 1rem, 0;\r\n        box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n        border-radius: 8px;\r\n        background-color: #70edb9;\r\n        color: #fff;\r\n        font-weight: 600;\r\n        cursor: pointer;\r\n        transition: all 0.2s ease-in;\r\n        &:hover {\r\n            transform: translateY(-3px);\r\n        }\r\n    }\r\n`;\r\nexport default AddMember;\r\n","import React from \"react\";\r\nimport { dbService } from \"../fbase\";\r\nimport styled from \"styled-components\";\r\n\r\nconst DelMember = ({ colName, groupName, groupData, eachName }) => {\r\n    const deleteMem = async (event) => {\r\n        event.preventDefault();\r\n\r\n        //네임을 비교하여 같으면 삭제\r\n        const idx = groupData[groupName].findIndex(function (item) {\r\n            return item.name === eachName;\r\n        });\r\n        if (idx > -1) groupData[groupName].splice(idx, 1);\r\n\r\n        await dbService.doc(`${colName}/Data`).set(groupData);\r\n    };\r\n    return (\r\n        <div>\r\n            <DelButton onClick={deleteMem}>삭제</DelButton>{\" \"}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst DelButton = styled.div`\r\n    width: 100%;\r\n    text-align: center;\r\n    padding-top: 8px;\r\n    padding-left: 15px;\r\n    padding-right: 15px;\r\n\r\n    height: 40px;\r\n    border: none;\r\n    margin: 1rem, 0;\r\n    box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n    border-radius: 8px;\r\n    background-color: #ff0000;\r\n    color: #fff;\r\n    font-weight: 600;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease-in;\r\n    &:hover {\r\n        transform: translateY(-3px);\r\n    }\r\n`;\r\nexport default DelMember;\r\n","import React from \"react\";\r\n\r\nconst Send = ({ profile, each }) => {\r\n    let timeNow = new Date();\r\n    let timeArray = timeNow.toLocaleTimeString().split(\":\");\r\n    let newTime = timeArray[0] + \"시\" + timeArray[1] + \"분\";\r\n    const finalMessage = `Mytree English\\n${each.name}(${each.group}) 출석하였습니다.\\n\\n출석 시간(${newTime})`;\r\n    console.log(finalMessage);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    var raw = JSON.stringify({\r\n        myphone: profile.myphone,\r\n        phoneNum: each.phone,\r\n        message: finalMessage,\r\n    });\r\n\r\n    var requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n    };\r\n\r\n    fetch(\r\n        \"https://us-central1-attendance-6c507.cloudfunctions.net/send\",\r\n        // \"http://localhost:5001/attendance-6c507/us-central1/send\",\r\n        requestOptions\r\n    )\r\n        .then((response) => response.text())\r\n        .then((result) => console.log(result))\r\n        .catch((error) => console.log(\"error\", error));\r\n    return <div>굿</div>;\r\n};\r\n\r\nexport default Send;\r\n","import React from \"react\";\r\nimport AddMember from \"./AddMember\";\r\nimport DelMember from \"./DelMember\";\r\nimport Send from \"./Send\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MemList = ({ colName, groupData, groupName, mode, profile }) => {\r\n    // let memeberList;\r\n\r\n    const memberList = groupData[groupName].map((each) => (\r\n        <div>\r\n            <ul>\r\n                {mode === \"edit\" ? (\r\n                    <DelMem>\r\n                        <div className=\"Name\">\r\n                            {each.name}({each.korean}\r\n                            {each.phone})\r\n                        </div>\r\n\r\n                        <DelMember\r\n                            groupData={groupData}\r\n                            colName={colName}\r\n                            groupName={groupName}\r\n                            eachName={each.name}\r\n                        />\r\n                    </DelMem>\r\n                ) : (\r\n                    <button\r\n                        onClick={() => {\r\n                            const result = window.confirm(\r\n                                `${each.name} 출석이 맞습니까?`\r\n                            );\r\n                            if (result) {\r\n                                Send({\r\n                                    profile,\r\n                                    each,\r\n                                });\r\n                            }\r\n                        }}\r\n                    >\r\n                        {each.name}\r\n                    </button>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    ));\r\n\r\n    return (\r\n        <Container>\r\n            {mode === \"edit\" ? (\r\n                <div>\r\n                    <h1>Member List</h1>\r\n                    <ul>{memberList}</ul>\r\n                    <AddMember\r\n                        colName={colName}\r\n                        groupData={groupData}\r\n                        groupName={groupName}\r\n                    />\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <h1>Member List</h1>\r\n                    <ul>{memberList}</ul>\r\n                </div>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    h1 {\r\n        color: #666666;\r\n        margin-bottom: 1rem;\r\n        text-align: center;\r\n    }\r\n    button {\r\n        width: 80%;\r\n        max-width: 350px;\r\n        min-width: 250px;\r\n        height: 40px;\r\n        border: none;\r\n        margin: 1rem, 0;\r\n        margin-bottom: 0.5rem;\r\n        box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n        border-radius: 8px;\r\n        background-color: #70edb9;\r\n        color: #fff;\r\n        font-size: 24px;\r\n        font-weight: 600;\r\n        cursor: pointer;\r\n        transition: all 0.2s ease-in;\r\n        &:hover {\r\n            transform: translateY(-3px);\r\n        }\r\n    }\r\n`;\r\n\r\nconst DelMem = styled.div`\r\n    display: flex;\r\n    margin-bottom: 1rem;\r\n    .Name {\r\n        width: 80%;\r\n        text-align: center;\r\n        padding-top: 8px;\r\n        max-width: 350px;\r\n        min-width: 250px;\r\n        height: 40px;\r\n        border: none;\r\n        margin: 1rem, 0;\r\n\r\n        box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n        border-radius: 8px;\r\n        background-color: #9d9d9d;\r\n        color: #fff;\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nexport default MemList;\r\n","import React, { useState } from \"react\";\r\nimport { dbService } from \"../fbase\";\r\nimport styled from \"styled-components\";\r\nimport Input from \"./Input\";\r\n\r\nconst AddClass = ({ colName, groupData }) => {\r\n    const [classGroup, setClassGroup] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService\r\n            .collection(colName)\r\n            .doc(\"Data\")\r\n            .set(\r\n                {\r\n                    [classGroup]: [],\r\n                },\r\n                { merge: true }\r\n            );\r\n    };\r\n    return (\r\n        <div>\r\n            <Form onSubmit={onSubmit}>\r\n                <h3>Add Class</h3>\r\n                <Input\r\n                    name=\"classGroup\"\r\n                    placeholder=\"Class Name\"\r\n                    onChange={(e) => setClassGroup(e.target.value)}\r\n                />\r\n                <button>ADD</button>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Form = styled.form`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 1rem;\r\n    h3 {\r\n        color: #666666;\r\n        margin-top: 2rem;\r\n        margin-bottom: 1rem;\r\n    }\r\n    button {\r\n        width: 80%;\r\n        max-width: 350px;\r\n        min-width: 250px;\r\n        height: 40px;\r\n        border: none;\r\n        margin: 1rem, 0;\r\n        box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n        border-radius: 8px;\r\n        background-color: #70edb9;\r\n        color: #fff;\r\n        font-weight: 600;\r\n        cursor: pointer;\r\n        transition: all 0.2s ease-in;\r\n        &:hover {\r\n            transform: translateY(-3px);\r\n        }\r\n    }\r\n`;\r\n\r\nexport default AddClass;\r\n","import React from \"react\";\r\nimport { dbService, firebaseInstance } from \"../fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst DelClass = ({ colName, groupName, groupData }) => {\r\n    const history = useHistory();\r\n    const deleteClass = async (event) => {\r\n        event.preventDefault();\r\n\r\n        //네임을 비교하여 같으면 삭제\r\n        await dbService.doc(`${colName}/Data`).update({\r\n            [groupName]: firebaseInstance.firestore.FieldValue.delete(),\r\n        });\r\n\r\n        history.push(\"/edit\");\r\n    };\r\n    return (\r\n        <Container>\r\n            <h3>Delete Class</h3>\r\n            <button onClick={deleteClass}>선택 삭제({groupName})</button>{\" \"}\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    h3 {\r\n        color: #666666;\r\n        margin-top: 2rem;\r\n        margin-bottom: 1rem;\r\n    }\r\n    button {\r\n        width: 80%;\r\n        max-width: 350px;\r\n        min-width: 250px;\r\n        height: 40px;\r\n        border: none;\r\n        margin: 1rem, 0;\r\n        box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n        border-radius: 8px;\r\n        background-color: #1c1939;\r\n        color: #fff;\r\n        font-weight: 600;\r\n        cursor: pointer;\r\n        transition: all 0.2s ease-in;\r\n        &:hover {\r\n            transform: translateY(-3px);\r\n        }\r\n    }\r\n`;\r\n\r\nexport default DelClass;\r\n","import React, { useState } from \"react\";\r\nimport MemList from \"./MemList\";\r\nimport AddClass from \"../components/AddClass\";\r\nimport DelClass from \"../components/DelClass\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst ClassList = ({ group, groupData, colName, mode, profile }) => {\r\n    //key값 나열\r\n    const [groupName, setGroupName] = useState(\"\");\r\n    const groupList = Object.keys(groupData);\r\n    groupList.sort();\r\n    const create = (eachGroup) => {\r\n        setGroupName(eachGroup);\r\n    };\r\n    const listGroups = groupList.map((eachGroup) => (\r\n        <ClassButton\r\n            eachGroup={eachGroup}\r\n            groupName={groupName}\r\n            onClick={() => create(eachGroup)}\r\n        >\r\n            {eachGroup}\r\n        </ClassButton>\r\n    ));\r\n\r\n    return (\r\n        <Container>\r\n            <Container1>\r\n                <h1>Class List</h1>\r\n                <Classes>\r\n                    <ul>{listGroups}</ul>\r\n                </Classes>\r\n                {/* {groupData[groupName] ? (\r\n                    <div>\r\n                        {groupName}\r\n                        <MemList\r\n                            groupName={groupName}\r\n                            colName={colName}\r\n                            groupData={groupData}\r\n                            mode={mode}\r\n                            profile={profile}\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                    \"\"\r\n                )} */}\r\n\r\n                {mode === \"edit\" ? (\r\n                    <div>\r\n                        <AddClass\r\n                            group={group}\r\n                            groupData={groupData}\r\n                            colName={colName}\r\n                        />\r\n\r\n                        {groupName ? (\r\n                            <DelClass\r\n                                groupData={groupData}\r\n                                colName={colName}\r\n                                groupName={groupName}\r\n                            />\r\n                        ) : (\r\n                            \"\"\r\n                        )}\r\n                    </div>\r\n                ) : (\r\n                    <div></div>\r\n                )}\r\n            </Container1>\r\n\r\n            {groupData[groupName] ? (\r\n                <Container2>\r\n                    <MemList\r\n                        groupName={groupName}\r\n                        colName={colName}\r\n                        groupData={groupData}\r\n                        mode={mode}\r\n                        profile={profile}\r\n                    />\r\n                </Container2>\r\n            ) : (\r\n                \"\"\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    display: --webkit-flex;\r\n    display: flex;\r\n    -webkit-flex-flow: row wrap;\r\n    flex-flow: row wrap;\r\n\r\n    @media (min-width: 900px) {\r\n        width: 900px;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n    }\r\n`;\r\n\r\nconst Container1 = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    /* justify-content: center; */\r\n    align-items: center;\r\n    h1 {\r\n        color: #666666;\r\n        margin-bottom: 1rem;\r\n    }\r\n    @media (min-width: 900px) {\r\n        width: 50%;\r\n    }\r\n`;\r\nconst Container2 = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    /* margin-top: 2rem; */\r\n    /* justify-content: center; */\r\n    align-items: center;\r\n    @media (min-width: 900px) {\r\n        width: 50%;\r\n    }\r\n`;\r\n\r\nconst Classes = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    margin-bottom: 3rem;\r\n`;\r\nconst ClassButton = styled.button`\r\n    /* display: flex;\r\n    flex-direction: row;\r\n    align-items: center; */\r\n\r\n    width: 10%;\r\n    max-width: 100px;\r\n    min-width: 80px;\r\n    height: 50px;\r\n    border: none;\r\n    margin-right: 0.5rem;\r\n    box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n    border-radius: 8px;\r\n    /* background-color: #7165e3; */\r\n    background-color: #7165e3;\r\n    ${(props) =>\r\n        props.eachGroup === props.groupName\r\n            ? css`\r\n                  background-color: #ffa689;\r\n              `\r\n            : css`\r\n                  background-color: #7165e3;\r\n              `};\r\n    color: #fff;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease-in;\r\n    &:hover {\r\n        transform: translateY(-3px);\r\n    }\r\n    &:focus {\r\n        background: #ffa689;\r\n    }\r\n`;\r\n\r\nexport default ClassList;\r\n","import { dbService } from \"../fbase\";\r\nimport React from \"react\";\r\n\r\nconst New = ({ userObj }) => {\r\n    const colName = userObj.uid.substring(0, 9);\r\n    const createNew = async () => {\r\n        await dbService.collection(colName).doc(\"Data\").set({});\r\n        await dbService.collection(colName).doc(\"Profile\").set({\r\n            myphone: \"My Phone Number\",\r\n        });\r\n    };\r\n    return (\r\n        <div>\r\n            <button onClick={createNew}>시작하기</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default New;\r\n","import React from \"react\";\r\n// import \"./Home.css\";\r\nimport ClassList from \"../components/ClassList\";\r\nimport New from \"../components/New\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Home = ({ userObj, group, groupData, colName, profile }) => {\r\n    const mode = \"send\";\r\n    return (\r\n        <Container>\r\n            {group ? (\r\n                <div>\r\n                    <ClassList\r\n                        group={group}\r\n                        groupData={groupData}\r\n                        coleName={colName}\r\n                        mode={mode}\r\n                        profile={profile}\r\n                    />\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <New userObj={userObj} />\r\n                </div>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n\r\n    justify-content: space-evenly;\r\n`;\r\n\r\nexport default Home;\r\n","import { authService, dbService } from \"../fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// import \"./Profile.css\";\r\n\r\nconst Profile = ({ colName, profile }) => {\r\n    const history = useHistory();\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    const [myPhoneInfo, setMyPhoneInfo] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if (name === \"myphone\") {\r\n            setMyPhoneInfo(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        await dbService.doc(`${colName}/Profile`).set({\r\n            myphone: myPhoneInfo,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div>My Phone Number: {profile.myphone}</div>\r\n            <div>\r\n                <form onSubmit={onSubmit}>\r\n                    <input\r\n                        name=\"myphone\"\r\n                        placeholder={profile.myphone}\r\n                        onChange={onChange}\r\n                    />\r\n\r\n                    <input type=\"submit\" value=\"Change\" />\r\n                </form>\r\n            </div>\r\n            <div>\r\n                <button onClick={onLogOutClick}>Log Out</button>\r\n            </div>\r\n            {/* <div>\r\n                <Link to=\"/editClass\">\r\n                    <span>Edit Class</span>\r\n                </Link>\r\n              \r\n            </div> */}\r\n        </>\r\n    );\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport ClassList from \"../components/ClassList\";\r\nimport styled from \"styled-components\";\r\nconst Edit = ({ group, groupData, colName }) => {\r\n    const mode = \"edit\";\r\n    return (\r\n        <>\r\n            <Container>\r\n                <ClassList\r\n                    group={group}\r\n                    groupData={groupData}\r\n                    colName={colName}\r\n                    mode={mode}\r\n                />\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n\r\n    justify-content: space-evenly;\r\n`;\r\nexport default Edit;\r\n","import React from \"react\";\r\nimport \"./About.css\";\r\n\r\n\r\nfunction About(props) {\r\n  return (\r\n    <div className=\"about__container\">\r\n      <span>2nd Deck </span>\r\n      <span> :)</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Ul = styled.ul`\r\n    list-style: none;\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    a {\r\n        padding: 18px 10px;\r\n        text-decoration: none;\r\n        color: #0008fc;\r\n        text-transform: uppercase;\r\n        font-size: 12px;\r\n        text-align: center;\r\n        font-weight: 600;\r\n    }\r\n    @media (max-width: 768px) {\r\n        flex-flow: column nowrap;\r\n        background-color: #ffffff;\r\n        position: fixed;\r\n        transform: ${({ open }) =>\r\n            open ? \"translateX(0)\" : \"translateX(100%)\"};\r\n        top: 0;\r\n        right: 0;\r\n        height: 100vh;\r\n        width: 150px;\r\n        padding-top: 3.5rem;\r\n        transition: transform 0.3s ease-in-out;\r\n        a {\r\n            color: #13a326;\r\n            text-transform: uppercase;\r\n            font-size: 12px;\r\n            text-align: center;\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n\r\nconst RightNav = ({ open }) => {\r\n    return (\r\n        <Ul open={open}>\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/profile\">Profile</Link>\r\n            <Link to=\"/edit\">Edit</Link>\r\n            <Link to=\"/about\">About</Link>\r\n            {/* <li>Sign Up</li> */}\r\n        </Ul>\r\n    );\r\n};\r\n\r\nexport default RightNav;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport RightNav from \"./RightNav\";\r\n\r\nconst StyledBurger = styled.div`\r\n    width: 2rem;\r\n    height: 2rem;\r\n    position: fixed;\r\n    top: 15px;\r\n    right: 20px;\r\n    z-index: 20;\r\n    display: none;\r\n    @media (max-width: 768px) {\r\n        display: flex;\r\n        justify-content: space-around;\r\n        flex-flow: column nowrap;\r\n    }\r\n    div {\r\n        width: 2rem;\r\n        height: 0.25rem;\r\n        background-color: ${({ open }) => (open ? \"#ccc\" : \"#333\")};\r\n        border-radius: 10px;\r\n        transform-origin: 1px;\r\n        transition: all 0.3s linear;\r\n        &:nth-child(1) {\r\n            transform: ${({ open }) => (open ? \"rotate(45deg)\" : \"rotate(0)\")};\r\n        }\r\n        &:nth-child(2) {\r\n            transform: ${({ open }) =>\r\n                open ? \"translateX(100%)\" : \"translateX(0)\"};\r\n            opacity: ${({ open }) => (open ? 0 : 1)};\r\n        }\r\n        &:nth-child(3) {\r\n            transform: ${({ open }) => (open ? \"rotate(-45deg)\" : \"rotate(0)\")};\r\n        }\r\n    }\r\n`;\r\n\r\nconst Burger = () => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <StyledBurger open={open} onClick={() => setOpen(!open)}>\r\n                <div />\r\n                <div />\r\n                <div />\r\n            </StyledBurger>\r\n            <RightNav open={open} />\r\n        </>\r\n    );\r\n};\r\nexport default Burger;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Burger from \"./Burger\";\r\n\r\nconst Nav = styled.nav`\r\n    width: 100%;\r\n    height: 55px;\r\n    border-bottom: 2px solid #f1f1f1;\r\n    padding: 0 20px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    .logo {\r\n        padding: 15px 0;\r\n        font-size: 25px;\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <Nav>\r\n            <div className=\"logo\">MY TREE ENGLISH</div>\r\n            <Burger />\r\n        </Nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Profile from \"../routes/Profile\";\r\nimport Edit from \"../routes/Edit\";\r\nimport About from \"../routes/About\";\r\n// import Navigation from \"./Navigation\";\r\nimport Navbar from \"../nav/Navbar\";\r\nimport styled from \"styled-components\";\r\n// import \"./App.css\";\r\n\r\nconst AppRouter = ({\r\n    isLoggedIn,\r\n    userObj,\r\n    group,\r\n    groupData,\r\n    colName,\r\n    profile,\r\n}) => {\r\n    return (\r\n        <Router>\r\n            {/* {isLoggedIn && <Navigation />} */}\r\n            {isLoggedIn && <Navbar />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <Container>\r\n                        <Route exact path=\"/\">\r\n                            <Home\r\n                                userObj={userObj}\r\n                                group={group}\r\n                                groupData={groupData}\r\n                                colName={colName}\r\n                                profile={profile}\r\n                            />\r\n                        </Route>\r\n                        <Route exact path=\"/about\">\r\n                            <About />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile colName={colName} profile={profile} />\r\n                        </Route>\r\n                        <Route exact path=\"/edit\">\r\n                            <Edit\r\n                                group={group}\r\n                                groupData={groupData}\r\n                                colName={colName}\r\n                            />\r\n                        </Route>\r\n                        {/* <Route exact path=\"/editClass\">\r\n                            <EditClass\r\n                                group={group}\r\n                                groupData={groupData}\r\n                                colName={colName}\r\n                            />\r\n                        </Route> */}\r\n                        {/* <Route exact path=\"/editMem\">\r\n                            <EditMem\r\n                                group={group}\r\n                                groupData={groupData}\r\n                                colName={colName}\r\n                            />\r\n                        </Route> */}\r\n                    </Container>\r\n                ) : (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Auth />\r\n                        </Route>\r\n                    </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\nconst Container = styled.div`\r\n    padding: 55px;\r\n    min-width: 650px;\r\n`;\r\n\r\nexport default AppRouter;\r\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService, dbService } from \"../fbase\";\nimport styled from \"styled-components\";\n// import bgImg from \"../assets/bg.png\";\n\nconst App = () => {\n    const [init, setInit] = useState(false);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [userObj, setUserObj] = useState(null);\n    const [colName, setColName] = useState(\"\");\n    const [group, setGroup] = useState(false);\n    const [groupData, setGroupData] = useState([]);\n\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if (user) {\n                setIsLoggedIn(true);\n                setUserObj(user);\n            } else {\n                setIsLoggedIn(false);\n            }\n            setInit(true);\n        });\n    }, []);\n    useEffect(() => {\n        if (userObj !== null) {\n            setColName(userObj.uid.substring(0, 9));\n        }\n    }, [userObj]);\n    useEffect(() => {\n        if (colName !== \"\") {\n            dbService.collection(colName).onSnapshot((snapshot) => {\n                const colNameArray = snapshot.docs.map((doc) => ({\n                    ...doc.data(),\n                }));\n\n                setGroupData(colNameArray);\n                if (colNameArray.length !== 0) {\n                    setGroup(true);\n                }\n            });\n            // dbService\n            //     .collection(colName)\n            //     .doc(\"Profile\")\n            //     .onSnapshot((snapshot) => {\n            //         const profileInfo = snapshot.docs.map((doc) => ({\n            //             ...doc.data(),\n            //             // id: doc.id,\n            //         }));\n\n            //         setProfile(profileInfo);\n            //     });\n        }\n    }, [colName]);\n\n    return (\n        <Container>\n            <Wrapper>\n                {init ? (\n                    <AppRouter\n                        isLoggedIn={isLoggedIn}\n                        userObj={userObj}\n                        groupData={groupData[0]}\n                        profile={groupData[1]}\n                        colName={colName}\n                        group={group}\n                    />\n                ) : (\n                    \"Initializing...\"\n                )}\n                {/* <div className=\"footer\"> */}\n                {/* <footer>&copy; {new Date().getFullYear()} 2nd-deck</footer> */}\n                {/* </div> */}\n            </Wrapper>\n        </Container>\n    );\n};\n\nconst Container = styled.div`\n    background: #eefcff;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n`;\nconst Wrapper = styled.div`\n    background-position: center;\n    background-size: cover;\n    background-repeat: no-repeat;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}