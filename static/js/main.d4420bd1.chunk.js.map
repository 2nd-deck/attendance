{"version":3,"sources":["fbase.js","components/Input.js","routes/Auth.js","components/AddMember.js","components/DelMember.js","components/Send.js","components/ModifyInput.js","components/SaveDate.js","components/MemList.js","components/AddClass.js","components/DelClass.js","components/ClassList.js","components/New.js","routes/Home.js","routes/Profile.js","routes/Edit.js","routes/Records.js","routes/About.js","nav/RightNav.jsx","nav/Burger.jsx","nav/Navbar.jsx","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","authService","auth","dbService","firestore","firebaseInstance","Input","type","placeholder","onChange","Container","StyledInput","requrired","autoComplete","styled","input","div","Form","form","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onSubmit","event","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","name","required","value","e","target","onClick","prev","AddMember","colName","groupData","groupName","newMember","setNewMember","newPhone","setNewPhone","push","phone","korean","group","doc","set","DelButton","DelMember","eachName","deleteMem","idx","findIndex","item","splice","Send","profile","each","timeArray","Date","toLocaleTimeString","split","newTime","finalMessage","console","log","myHeaders","Headers","append","raw","JSON","stringify","userId","myphone","phoneNum","fetch","method","headers","body","redirect","then","response","text","result","catch","ModifyInput","SaveDate","dateInfo","dateNow","today","toLocaleDateString","year","month","substring","date","length","newDateInfo","yearMonth","collection","attend","every","Membutton","button","DelMem","Mem","props","memName","css","MemList","mode","setMemName","newGroup","setNewGroup","groupList","Object","keys","sort","selectGroup","map","changeGroup","memberList","defaultValue","window","confirm","disabled","AddClass","classGroup","setClassGroup","merge","alert","DelClass","history","useHistory","deleteClass","update","FieldValue","delete","Container1","Container2","Classes","ClassButton","eachGroup","ClassList","setGroupName","listGroups","create","New","userObj","uid","createNew","Home","Profile","myPhoneInfo","setMyPhoneInfo","signOut","Edit","Records","nameList","setNameList","memList","setMemList","yearMonthList","selectYearMonth","showMembers","each1","temp","MemButton","ModifyMember","showMem","Ul","ul","open","RightNav","to","StyledBurger","Burger","setOpen","Nav","nav","Navbar","AppRouter","isLoggedIn","exact","path","About","Wrapper","App","init","setInit","setIsLoggedIn","setUserObj","setColName","setGroup","setGroupData","useEffect","onAuthStateChanged","user","onSnapshot","snapshot","colNameArray","docs","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4420bd1.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n//   create-react-app으로 만들어 환경변수를 사용하려면 REACT_APP_'환경변수'로 해야한다.\r\n// git ignore에 .env를 추가해서 github에 추가되는것을 막는다. 빌드하면 결국은 변환되어 값이 나타나므로 보안사항은 아니고\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const firebaseInstance = firebase;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Input = ({ type, placeholder, onChange }) => {\r\n    return (\r\n        <Container>\r\n            <StyledInput\r\n                type={type ? type : \"text\"}\r\n                placeholder={placeholder && placeholder}\r\n                onChange={onChange}\r\n                requrired\r\n                autoComplete=\"off\"\r\n            />\r\n        </Container>\r\n    );\r\n};\r\nconst StyledInput = styled.input`\r\n    width: 80%;\r\n    max-width: 200px;\r\n    min-width: 200px;\r\n    height: 40px;\r\n    border: none;\r\n    margin-bottom: 1rem;\r\n    background-color: #f5f5f5;\r\n    box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n    border-radius: 8px;\r\n    padding: 0 1rem;\r\n    transition: all 0.2s ease-in;\r\n    &:hover {\r\n        transform: translateY(-3px);\r\n    }\r\n`;\r\n\r\n// const Status = styled.div`\r\n//     height: 10px;\r\n//     width: 10px;\r\n//     background: #9d9d9d;\r\n//     border-radius: 10px;\r\n//     margin-left: 1rem;\r\n\r\n//     ${StyledInput}:focus + & {\r\n//         background: #ffa689;\r\n//     }\r\n//     ${StyledInput}:invalid + & {\r\n//         background: #fe2f75;\r\n//     }\r\n//     ${StyledInput}:valid + & {\r\n//         background: #70edb9;\r\n//     }\r\n// `;\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport default Input;\r\n","import { authService } from \"../fbase\";\r\nimport React, { useState } from \"react\";\r\nimport \"./Auth.css\";\r\nimport Input from \"../components/Input\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Auth = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            }\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <Container>\r\n            <Form onSubmit={onSubmit} className=\"container1\">\r\n                <h1>Welcome</h1>\r\n                <Input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <Input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    className=\"authInput authSubmit\"\r\n                    value={newAccount ? \"Create Account\" : \"Log In\"}\r\n                />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n                <span onClick={toggleAccount} className=\"authSwitch\">\r\n                    {newAccount ? \"Sing In\" : \"Create Account\"}\r\n                </span>\r\n            </Form>\r\n        </Container>\r\n    );\r\n};\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n\r\n    justify-content: space-evenly;\r\n`;\r\nconst Form = styled.form`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 1rem;\r\n    h1 {\r\n        color: #666666;\r\n        margin-top: 2rem;\r\n        margin-bottom: 2rem;\r\n    }\r\n    button {\r\n        width: 80%;\r\n        max-width: 250px;\r\n        min-width: 250px;\r\n        height: 40px;\r\n        border: none;\r\n        margin: 1rem, 0;\r\n        box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n        border-radius: 8px;\r\n        background-color: #70edb9;\r\n        color: #fff;\r\n        font-weight: 600;\r\n        cursor: pointer;\r\n        transition: all 0.2s ease-in;\r\n        &:hover {\r\n            transform: translateY(-3px);\r\n        }\r\n    }\r\n`;\r\nexport default Auth;\r\n","import React, { useState } from \"react\";\r\nimport { dbService } from \"../fbase\";\r\nimport { Input } from \"./Input\";\r\nimport styled from \"styled-components\";\r\n\r\nconst AddMember = ({ colName, groupData, groupName }) => {\r\n    const [newMember, setNewMember] = useState(\"\");\r\n    const [newPhone, setNewPhone] = useState(\"\");\r\n    // const [newKorean, setNewKorean] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        groupData[groupName].push({\r\n            name: newMember,\r\n            phone: newPhone,\r\n            korean: \"\",\r\n            group: groupName,\r\n        });\r\n        await dbService.doc(`${colName}/Data`).set(groupData);\r\n    };\r\n\r\n    // const addData = (groupData) => {\r\n    //     groupData.push({\r\n    //         name: newMember,\r\n    //         phone: newPhone,\r\n    //         group: newGroup,\r\n    //     });\r\n    // };\r\n    return (\r\n        <div>\r\n            <Form onSubmit={onSubmit}>\r\n                <h3>Add Member</h3>\r\n                <Input\r\n                    name=\"member\"\r\n                    placeholder=\"Member Name\"\r\n                    onChange={(e) => setNewMember(e.target.value)}\r\n                />\r\n                {/* <Input\r\n                    name=\"koreanName\"\r\n                    placeholder=\"실명\"\r\n                    onChange={(e) => setNewKorean(e.target.value)}\r\n                /> */}\r\n                <Input\r\n                    name=\"phone\"\r\n                    type=\"phone\"\r\n                    placeholder=\"Phone Number\"\r\n                    onChange={(e) => setNewPhone(e.target.value)}\r\n                />\r\n                <button>Add</button>\r\n                {/* <input type=\"submit\" value=\"Add\" /> */}\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\nconst Form = styled.form`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    h3 {\r\n        color: #666666;\r\n        margin-top: 1rem;\r\n        margin-bottom: 1rem;\r\n    }\r\n    button {\r\n        width: 75%;\r\n        width: 80%;\r\n        max-width: 350px;\r\n        min-width: 250px;\r\n        height: 40px;\r\n        border: none;\r\n        margin: 1rem, 0;\r\n        box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n        border-radius: 8px;\r\n        background-color: #70edb9;\r\n        color: #fff;\r\n        font-weight: 600;\r\n        cursor: pointer;\r\n        transition: all 0.2s ease-in;\r\n        &:hover {\r\n            transform: translateY(-3px);\r\n        }\r\n    }\r\n`;\r\nexport default AddMember;\r\n","import React from \"react\";\r\nimport { dbService } from \"../fbase\";\r\nimport styled from \"styled-components\";\r\n\r\nconst DelMember = ({ colName, groupName, groupData, eachName }) => {\r\n    const deleteMem = async (event) => {\r\n        event.preventDefault();\r\n\r\n        //네임을 비교하여 같으면 삭제\r\n        const idx = groupData[groupName].findIndex(function (item) {\r\n            return item.name === eachName;\r\n        });\r\n        if (idx > -1) groupData[groupName].splice(idx, 1);\r\n\r\n        await dbService.doc(`${colName}/Data`).set(groupData);\r\n    };\r\n    return (\r\n        <div>\r\n            <DelButton onClick={deleteMem}>삭제</DelButton>{\" \"}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst DelButton = styled.div`\r\n    width: 100%;\r\n    text-align: center;\r\n    padding-top: 8px;\r\n    padding-left: 15px;\r\n    padding-right: 15px;\r\n\r\n    height: 40px;\r\n    border: none;\r\n    margin: 1rem, 0;\r\n    box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n    border-radius: 8px;\r\n    background-color: #ff0000;\r\n    color: #fff;\r\n    font-weight: 600;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease-in;\r\n    &:hover {\r\n        transform: translateY(-3px);\r\n    }\r\n`;\r\nexport default DelMember;\r\n","import React from \"react\";\r\n\r\nconst Send = ({ profile, each, colName }) => {\r\n    let timeNow = new Date();\r\n\r\n    let timeArray = timeNow.toLocaleTimeString().split(\":\");\r\n    let newTime = timeArray[0] + \"시\" + timeArray[1] + \"분\";\r\n    const finalMessage = `Mytree English\\n${each.name}(${each.group}) 출석하였습니다.\\n\\n출석 시간(${newTime})`;\r\n    console.log(colName);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    var raw = JSON.stringify({\r\n        userId: colName,\r\n        myphone: profile.myphone,\r\n        phoneNum: each.phone,\r\n        message: finalMessage,\r\n    });\r\n\r\n    var requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n    };\r\n\r\n    fetch(\r\n        \"https://us-central1-attendance-6c507.cloudfunctions.net/send\",\r\n        // \"http://localhost:5001/attendance-6c507/us-central1/send\",\r\n        requestOptions\r\n    )\r\n        .then((response) => response.text())\r\n        .then((result) => console.log(result))\r\n        .catch((error) => console.log(\"error\", error));\r\n    return <div></div>;\r\n};\r\n\r\nexport default Send;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ModifyInput = ({ type, placeholder, onChange }) => {\r\n    return (\r\n        <Container>\r\n            <StyledInput\r\n                type={type ? type : \"text\"}\r\n                placeholder={placeholder && placeholder}\r\n                onChange={onChange}\r\n                requrired\r\n                autoComplete=\"off\"\r\n            />\r\n        </Container>\r\n    );\r\n};\r\nconst StyledInput = styled.input`\r\n    width: 100%;\r\n    max-width: 150px;\r\n    min-width: 100px;\r\n    height: 40px;\r\n    border: none;\r\n    margin-bottom: 1rem;\r\n    margin-right: 0.5rem;\r\n    background-color: #f5f5f5;\r\n    box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n    border-radius: 8px;\r\n    padding: 0 1rem;\r\n    transition: all 0.2s ease-in;\r\n    &:hover {\r\n        transform: translateY(-3px);\r\n    }\r\n`;\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport default ModifyInput;\r\n","import React from \"react\";\r\nimport { dbService } from \"../fbase\";\r\n\r\nconst SaveDate = async ({ each, colName, dateInfo }) => {\r\n    let dateNow = new Date();\r\n    const today = dateNow.toLocaleDateString().split(\".\");\r\n    const year = today[0];\r\n    let month = today[1].substring(1);\r\n    const date = today[2].substring(1);\r\n    if (month.length === 1) {\r\n        month = \"0\" + month;\r\n    } else {\r\n        month = today[1];\r\n    }\r\n\r\n    const yearMonth = year + month;\r\n    let newDateInfo = dateInfo;\r\n    // let setSaveInfo = [];\r\n    // console.log(newDateInfo[yearMonth][each.name]);\r\n    if (newDateInfo[yearMonth]) {\r\n        if (newDateInfo[yearMonth][each.name]) {\r\n            newDateInfo[yearMonth][each.name].push(date);\r\n        } else {\r\n            newDateInfo[yearMonth][each.name] = [date];\r\n        }\r\n    } else {\r\n        newDateInfo[yearMonth] = { [each.name]: [date] };\r\n    }\r\n\r\n    // const updatedData = {\r\n    // [each.name]: setSaveInfo,\r\n    // };\r\n    // console.log(updatedData);\r\n    // coleName.date;\r\n\r\n    await dbService.collection(colName).doc(\"Date\").set(newDateInfo);\r\n\r\n    return <div></div>;\r\n};\r\n\r\nexport default SaveDate;\r\n","import React, { useState } from \"react\";\r\nimport AddMember from \"./AddMember\";\r\nimport DelMember from \"./DelMember\";\r\nimport Send from \"./Send\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ModifyInput } from \"../components/ModifyInput\";\r\nimport { dbService } from \"../fbase\";\r\n\r\nimport SaveDate from \"./SaveDate\";\r\n\r\nconst MemList = ({\r\n    colName,\r\n    groupData,\r\n    groupName,\r\n    mode,\r\n    profile,\r\n    dateInfo,\r\n}) => {\r\n    const [memName, setMemName] = useState(\"\");\r\n    const [newMember, setNewMember] = useState(\"\");\r\n    const [newPhone, setNewPhone] = useState(\"\");\r\n    const [newGroup, setNewGroup] = useState(\"\");\r\n\r\n    const groupList = Object.keys(groupData);\r\n    groupList.sort();\r\n    const create = (props) => {\r\n        setMemName(props.name);\r\n        setNewMember(props.name);\r\n        setNewPhone(props.phone);\r\n        setNewGroup(props.group);\r\n    };\r\n    const selectGroup = groupList.map((group) => (\r\n        <option value={group}>{group}</option>\r\n    ));\r\n\r\n    const changeGroup = (e) => {\r\n        setNewGroup(e.target.value);\r\n    };\r\n\r\n    const onSubmit = async (event, props) => {\r\n        event.preventDefault();\r\n\r\n        groupData[newGroup].push({\r\n            name: newMember,\r\n            phone: newPhone,\r\n            korean: \"\",\r\n            group: newGroup,\r\n        });\r\n        //네임을 비교하여 같으면 삭제\r\n        const idx = groupData[groupName].findIndex(function (item) {\r\n            return item.name === props;\r\n        });\r\n        if (idx > -1) groupData[groupName].splice(idx, 1);\r\n        await dbService.doc(`${colName}/Data`).set(groupData);\r\n    };\r\n    // let memeberList;\r\n    const memberList = groupData[groupName].map((each) => (\r\n        <div>\r\n            <ul>\r\n                {mode === \"edit\" ? (\r\n                    <div>\r\n                        <DelMem>\r\n                            <Mem\r\n                                eachName={each.name}\r\n                                memName={memName}\r\n                                onClick={() => create(each)}\r\n                            >\r\n                                {each.name}({each.korean}\r\n                                {each.phone})\r\n                            </Mem>\r\n                            <DelMember\r\n                                groupData={groupData}\r\n                                colName={colName}\r\n                                groupName={groupName}\r\n                                eachName={each.name}\r\n                            />\r\n                        </DelMem>\r\n\r\n                        <div>\r\n                            {each.name === memName ? (\r\n                                <Form onSubmit={(e) => onSubmit(e, each.name)}>\r\n                                    <div>\r\n                                        <ModifyInput\r\n                                            name=\"member\"\r\n                                            placeholder={each.name}\r\n                                            onChange={(e) =>\r\n                                                setNewMember(e.target.value)\r\n                                            }\r\n                                        />\r\n                                        <select\r\n                                            defaultValue={each.group}\r\n                                            onChange={changeGroup}\r\n                                        >\r\n                                            {selectGroup}\r\n                                        </select>\r\n                                    </div>\r\n                                    <div>\r\n                                        <ModifyInput\r\n                                            name=\"phone\"\r\n                                            type=\"phone\"\r\n                                            placeholder={each.phone}\r\n                                            onChange={(e) =>\r\n                                                setNewPhone(e.target.value)\r\n                                            }\r\n                                        />\r\n                                        <button>Modify</button>\r\n                                    </div>\r\n                                </Form>\r\n                            ) : null}\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <Membutton\r\n                        onClick={() => {\r\n                            const result = window.confirm(\r\n                                `${each.name} 출석이 맞습니까?`\r\n                            );\r\n                            if (result) {\r\n                                SaveDate({ each, colName, dateInfo });\r\n                                Send({\r\n                                    profile,\r\n                                    each,\r\n                                    colName,\r\n                                    dateInfo,\r\n                                });\r\n                            }\r\n                        }}\r\n                        disabled={attend({ each, dateInfo })}\r\n                    >\r\n                        {each.name}\r\n                    </Membutton>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    ));\r\n\r\n    return (\r\n        <Container>\r\n            {mode === \"edit\" ? (\r\n                <div>\r\n                    <h1>Member List</h1>\r\n                    <ul>{memberList}</ul>\r\n                    <AddMember\r\n                        colName={colName}\r\n                        groupData={groupData}\r\n                        groupName={groupName}\r\n                    />\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <h1>Member List</h1>\r\n                    <ul>{memberList}</ul>\r\n                </div>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst attend = ({ each, dateInfo }) => {\r\n    let dateNow = new Date();\r\n    const today = dateNow.toLocaleDateString().split(\".\");\r\n    const year = today[0];\r\n    let month = today[1].substring(1);\r\n    const date = today[2].substring(1);\r\n    if (month.length === 1) {\r\n        month = \"0\" + month;\r\n    } else {\r\n        month = today[1];\r\n    }\r\n    const yearMonth = year + month;\r\n\r\n    // let setSaveInfo = [];\r\n    if (dateInfo[yearMonth]) {\r\n        if (dateInfo[yearMonth][each.name]) {\r\n            if (\r\n                dateInfo[yearMonth][each.name].every(function (value) {\r\n                    return value !== date;\r\n                })\r\n            ) {\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\nconst Container = styled.div`\r\n    h1 {\r\n        color: #666666;\r\n        margin-bottom: 1rem;\r\n        text-align: center;\r\n    }\r\n`;\r\nconst Form = styled.form`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    h1 {\r\n        color: #666666;\r\n        margin-top: 1rem;\r\n        margin-bottom: 1rem;\r\n    }\r\n    select {\r\n        /* font-size: 18px; */\r\n        padding: 6px;\r\n        font-weight: 600;\r\n        border-radius: 8px;\r\n        margin-bottom: 1rem;\r\n        height: 40px;\r\n        padding: 0 1rem;\r\n        border: none;\r\n        background-color: #f5f5f5;\r\n        transition: all 0.2s ease-in;\r\n        &:hover {\r\n            transform: translateY(-3px);\r\n        }\r\n    }\r\n    button {\r\n        width: 75%;\r\n        max-width: 110px;\r\n        min-width: 100px;\r\n        height: 40px;\r\n        border: none;\r\n        margin: 1rem, 0;\r\n        margin-bottom: 1rem;\r\n\r\n        box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n        border-radius: 8px;\r\n        background-color: #70edb9;\r\n        color: #fff;\r\n        font-weight: 600;\r\n        cursor: pointer;\r\n        transition: all 0.2s ease-in;\r\n        &:hover {\r\n            transform: translateY(-3px);\r\n        }\r\n    }\r\n`;\r\n\r\nconst Membutton = styled.button`\r\n    width: 80%;\r\n    max-width: 350px;\r\n    min-width: 250px;\r\n    height: 60px;\r\n    border: none;\r\n    margin: 1rem, 0;\r\n    margin-bottom: 2rem;\r\n    box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n    border-radius: 8px;\r\n    background-color: #70edb9;\r\n    color: #fff;\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease-in;\r\n    &:hover {\r\n        transform: translateY(-3px);\r\n    }\r\n    &:disabled {\r\n        background-color: #fe2f75;\r\n    }\r\n`;\r\nconst DelMem = styled.div`\r\n    display: flex;\r\n    margin-bottom: 1rem;\r\n`;\r\n\r\nconst Mem = styled.div`\r\n    display: flex;\r\n    margin-bottom: 0.5rem;\r\n\r\n    width: 70%;\r\n    text-align: center;\r\n    padding-top: 8px;\r\n    max-width: 350px;\r\n    min-width: 250px;\r\n    height: 40px;\r\n    border: none;\r\n    margin: 1rem, 0;\r\n    padding-left: 10px;\r\n    box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n    border-radius: 8px;\r\n    background-color: rgb(177, 180, 182);\r\n    color: #fff;\r\n    ${(props) =>\r\n        props.eachName === props.memName\r\n            ? css`\r\n                  background-color: #ffa689;\r\n              `\r\n            : css`\r\n                  background-color: rgb(177, 180, 182);\r\n              `};\r\n    color: #fff;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease-in;\r\n    &:hover {\r\n        transform: translateY(-3px);\r\n    }\r\n    &:focus {\r\n        background: #ffa689;\r\n    }\r\n`;\r\n\r\nexport default MemList;\r\n","import React, { useState } from \"react\";\r\nimport { dbService } from \"../fbase\";\r\nimport styled from \"styled-components\";\r\nimport Input from \"./Input\";\r\n\r\nconst AddClass = ({ colName, groupData, groupList }) => {\r\n    const [classGroup, setClassGroup] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (\r\n            groupList.every(function (value) {\r\n                return value !== classGroup;\r\n            })\r\n        ) {\r\n            await dbService\r\n                .collection(colName)\r\n                .doc(\"Data\")\r\n                .set(\r\n                    {\r\n                        [classGroup]: [],\r\n                    },\r\n                    { merge: true }\r\n                );\r\n        } else {\r\n            window.alert(\"동일한 그룹명이 존재합니다.\");\r\n            return;\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            <Form onSubmit={onSubmit}>\r\n                <h3>Add Class</h3>\r\n                <Input\r\n                    name=\"classGroup\"\r\n                    placeholder=\"Class Name\"\r\n                    onChange={(e) => setClassGroup(e.target.value)}\r\n                />\r\n                <button>ADD</button>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Form = styled.form`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 1rem;\r\n    h3 {\r\n        color: #666666;\r\n        margin-top: 0rem;\r\n        margin-bottom: 1rem;\r\n    }\r\n    button {\r\n        width: 80%;\r\n        max-width: 350px;\r\n        min-width: 250px;\r\n        height: 40px;\r\n        border: none;\r\n        margin: 1rem, 0;\r\n        box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n        border-radius: 8px;\r\n        background-color: #70edb9;\r\n        color: #fff;\r\n        font-weight: 600;\r\n        cursor: pointer;\r\n        transition: all 0.2s ease-in;\r\n        &:hover {\r\n            transform: translateY(-3px);\r\n        }\r\n    }\r\n`;\r\n\r\nexport default AddClass;\r\n","import React from \"react\";\r\nimport { dbService, firebaseInstance } from \"../fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst DelClass = ({ colName, groupName, groupData }) => {\r\n    const history = useHistory();\r\n    const deleteClass = async (event) => {\r\n        event.preventDefault();\r\n\r\n        //네임을 비교하여 같으면 삭제\r\n        await dbService.doc(`${colName}/Data`).update({\r\n            [groupName]: firebaseInstance.firestore.FieldValue.delete(),\r\n        });\r\n\r\n        history.push(\"/edit\");\r\n    };\r\n    return (\r\n        <Container>\r\n            <h3>Delete Class</h3>\r\n            <button onClick={deleteClass}>선택 삭제({groupName})</button>{\" \"}\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 4rem;\r\n    h3 {\r\n        color: #666666;\r\n        margin-top: 2rem;\r\n        margin-bottom: 1rem;\r\n    }\r\n    button {\r\n        width: 80%;\r\n        max-width: 350px;\r\n        min-width: 250px;\r\n        height: 40px;\r\n        border: none;\r\n        margin: 1rem, 0;\r\n        box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n        border-radius: 8px;\r\n        background-color: #1c1939;\r\n        color: #fff;\r\n        font-weight: 600;\r\n        cursor: pointer;\r\n        transition: all 0.2s ease-in;\r\n        &:hover {\r\n            transform: translateY(-3px);\r\n        }\r\n    }\r\n`;\r\n\r\nexport default DelClass;\r\n","import React, { useState } from \"react\";\r\nimport MemList from \"./MemList\";\r\nimport AddClass from \"../components/AddClass\";\r\nimport DelClass from \"../components/DelClass\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst ClassList = ({ group, groupData, colName, mode, profile, dateInfo }) => {\r\n    //key값 나열\r\n    const [groupName, setGroupName] = useState(\"\");\r\n    const groupList = Object.keys(groupData);\r\n    groupList.sort();\r\n    const create = (eachGroup) => {\r\n        setGroupName(eachGroup);\r\n    };\r\n    const listGroups = groupList.map((eachGroup) => (\r\n        <ClassButton\r\n            eachGroup={eachGroup}\r\n            groupName={groupName}\r\n            onClick={() => create(eachGroup)}\r\n        >\r\n            {eachGroup}\r\n        </ClassButton>\r\n    ));\r\n\r\n    return (\r\n        <Container>\r\n            <Container1>\r\n                <h1>Class List</h1>\r\n                <Classes>\r\n                    <ul>{listGroups}</ul>\r\n                </Classes>\r\n                {/* {groupData[groupName] ? (\r\n                    <div>\r\n                        {groupName}\r\n                        <MemList\r\n                            groupName={groupName}\r\n                            colName={colName}\r\n                            groupData={groupData}\r\n                            mode={mode}\r\n                            profile={profile}\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                    \"\"\r\n                )} */}\r\n\r\n                {mode === \"edit\" ? (\r\n                    <div>\r\n                        <AddClass\r\n                            groupList={groupList}\r\n                            group={group}\r\n                            groupData={groupData}\r\n                            colName={colName}\r\n                        />\r\n\r\n                        {groupName ? (\r\n                            <DelClass\r\n                                groupData={groupData}\r\n                                colName={colName}\r\n                                groupName={groupName}\r\n                            />\r\n                        ) : (\r\n                            \"\"\r\n                        )}\r\n                    </div>\r\n                ) : (\r\n                    <div></div>\r\n                )}\r\n            </Container1>\r\n\r\n            {groupData[groupName] ? (\r\n                <Container2>\r\n                    <MemList\r\n                        groupName={groupName}\r\n                        colName={colName}\r\n                        groupData={groupData}\r\n                        mode={mode}\r\n                        profile={profile}\r\n                        dateInfo={dateInfo}\r\n                    />\r\n                </Container2>\r\n            ) : (\r\n                \"\"\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    display: --webkit-flex;\r\n    display: flex;\r\n    -webkit-flex-flow: row wrap;\r\n    flex-flow: row wrap;\r\n    width: 100%;\r\n\r\n    @media (min-width: 900px) {\r\n        width: 900px;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n    }\r\n`;\r\n\r\nconst Container1 = styled.div`\r\n    width: 100%;\r\n    /* height: 100%; */\r\n    display: flex;\r\n    flex-direction: column;\r\n    /* justify-content: center; */\r\n    align-items: center;\r\n    margin-bottom: 1rem;\r\n    h1 {\r\n        color: #666666;\r\n        margin-bottom: 0.5rem;\r\n    }\r\n    @media (min-width: 900px) {\r\n        width: 50%;\r\n        margin-bottom: 0rem;\r\n    }\r\n`;\r\nconst Container2 = styled.div`\r\n    width: 100%;\r\n    /* height: 100%; */\r\n    display: flex;\r\n    flex-direction: column;\r\n    /* margin-top: 2rem; */\r\n    justify-content: default(flex-start);\r\n    align-items: center;\r\n    @media (min-width: 900px) {\r\n        width: 50%;\r\n    }\r\n`;\r\n\r\nconst Classes = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    flex-flow: wrap;\r\n\r\n    margin-bottom: 3rem;\r\n`;\r\nconst ClassButton = styled.button`\r\n    /* display: flex;\r\n    flex-direction: row;\r\n    align-items: center; */\r\n\r\n    width: 10%;\r\n    max-width: 110px;\r\n    min-width: 90px;\r\n    height: 50px;\r\n    border: none;\r\n    margin-right: 0.5rem;\r\n    margin-top: 0.5rem;\r\n    box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n    border-radius: 8px;\r\n    /* background-color: #7165e3; */\r\n    background-color: #7165e3;\r\n    ${(props) =>\r\n        props.eachGroup === props.groupName\r\n            ? css`\r\n                  background-color: #ffa689;\r\n              `\r\n            : css`\r\n                  background-color: #7165e3;\r\n              `};\r\n    color: #fff;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease-in;\r\n    &:hover {\r\n        transform: translateY(-3px);\r\n    }\r\n    &:focus {\r\n        background: #ffa689;\r\n    }\r\n`;\r\n\r\nexport default ClassList;\r\n","import { dbService } from \"../fbase\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst New = ({ userObj }) => {\r\n    const colName = userObj.uid.substring(0, 9);\r\n    const createNew = async () => {\r\n        await dbService.collection(colName).doc(\"Data\").set({});\r\n        await dbService.collection(colName).doc(\"Profile\").set({\r\n            myphone: \"My Phone Number\",\r\n        });\r\n        await dbService.collection(colName).doc(\"Date\").set({});\r\n    };\r\n    return (\r\n        <Container>\r\n            <h1>새로 시작하기</h1>\r\n            <button onClick={createNew}>START</button>\r\n        </Container>\r\n    );\r\n};\r\nconst Container = styled.div`\r\n    h1 {\r\n        color: #666666;\r\n        margin-bottom: 1rem;\r\n        text-align: center;\r\n    }\r\n    button {\r\n        width: 80%;\r\n        max-width: 350px;\r\n        min-width: 250px;\r\n        height: 40px;\r\n        border: none;\r\n        margin: 1rem, 0;\r\n        margin-bottom: 0.5rem;\r\n        box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n        border-radius: 8px;\r\n        background-color: #70edb9;\r\n        color: #fff;\r\n        font-size: 24px;\r\n        font-weight: 600;\r\n        cursor: pointer;\r\n        transition: all 0.2s ease-in;\r\n        &:hover {\r\n            transform: translateY(-3px);\r\n        }\r\n    }\r\n`;\r\nexport default New;\r\n","import React from \"react\";\r\n// import \"./Home.css\";\r\nimport ClassList from \"../components/ClassList\";\r\nimport New from \"../components/New\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Home = ({ userObj, group, groupData, colName, profile, dateInfo }) => {\r\n    const mode = \"send\";\r\n    return (\r\n        <Container>\r\n            {group ? (\r\n                <div>\r\n                    <ClassList\r\n                        group={group}\r\n                        groupData={groupData}\r\n                        colName={colName}\r\n                        mode={mode}\r\n                        profile={profile}\r\n                        dateInfo={dateInfo}\r\n                    />\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <New userObj={userObj} />\r\n                </div>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n\r\n    justify-content: space-evenly;\r\n`;\r\n\r\nexport default Home;\r\n","import { authService, dbService } from \"../fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Input from \"../components/Input\";\r\nimport styled from \"styled-components\";\r\n\r\n// import \"./Profile.css\";\r\n\r\nconst Profile = ({ colName, profile }) => {\r\n    const history = useHistory();\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    const [myPhoneInfo, setMyPhoneInfo] = useState(\"\");\r\n\r\n    // const onChange = (event) => {\r\n    //     const {\r\n    //         target: { name, value },\r\n    //     } = event;\r\n    //     if (name === \"myphone\") {\r\n    //         setMyPhoneInfo(value);\r\n    //     }\r\n    // };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        await dbService.doc(`${colName}/Profile`).set({\r\n            myphone: myPhoneInfo,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <Form onSubmit={onSubmit}>\r\n                    <h3>My Phone Number: {profile.myphone}</h3>\r\n                    <Input\r\n                        name=\"myphone\"\r\n                        placeholder=\"My phone Number\"\r\n                        onChange={(e) => setMyPhoneInfo(e.target.value)}\r\n                    />\r\n\r\n                    <button>Change</button>\r\n                </Form>\r\n            </div>\r\n            <Form>\r\n                <h3>LogOut</h3>\r\n                <button onClick={onLogOutClick}>Log Out</button>\r\n            </Form>\r\n            {/* <div>\r\n                <Link to=\"/editClass\">\r\n                    <span>Edit Class</span>\r\n                </Link>\r\n              \r\n            </div> */}\r\n        </>\r\n    );\r\n};\r\n\r\nconst Form = styled.form`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 1rem;\r\n    h3 {\r\n        color: #666666;\r\n        margin-top: 2rem;\r\n        margin-bottom: 1rem;\r\n    }\r\n    button {\r\n        width: 80%;\r\n        max-width: 250px;\r\n        min-width: 250px;\r\n        height: 40px;\r\n        border: none;\r\n        margin: 1rem, 0;\r\n        box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n        border-radius: 8px;\r\n        background-color: #70edb9;\r\n        color: #fff;\r\n        font-weight: 600;\r\n        cursor: pointer;\r\n        transition: all 0.2s ease-in;\r\n        &:hover {\r\n            transform: translateY(-3px);\r\n        }\r\n    }\r\n`;\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport ClassList from \"../components/ClassList\";\r\nimport styled from \"styled-components\";\r\nconst Edit = ({ group, groupData, colName, dateInfo }) => {\r\n    const mode = \"edit\";\r\n    return (\r\n        <>\r\n            <Container>\r\n                <ClassList\r\n                    group={group}\r\n                    groupData={groupData}\r\n                    colName={colName}\r\n                    mode={mode}\r\n                    dateInfo={dateInfo}\r\n                />\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n\r\n    justify-content: space-evenly;\r\n`;\r\nexport default Edit;\r\n","import React, { useState } from \"react\";\r\n// import { dbService } from \"../fbase\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Records = ({ group, groupData, colName, dateInfo }) => {\r\n    const [nameList, setNameList] = useState([]);\r\n    const [memList, setMemList] = useState({});\r\n    const yearMonthList = Object.keys(dateInfo);\r\n    yearMonthList.sort();\r\n    const selectYearMonth = yearMonthList.map((yearMonth) => (\r\n        <option value={yearMonth}>\r\n            {yearMonth.substring(0, 4)}년 {yearMonth.substring(4)}월\r\n        </option>\r\n    ));\r\n    // console.log(yearMonthList);\r\n    const showMem = (e) => {\r\n        // setSelYearMonth(e.target.value);\r\n\r\n        setMemList(dateInfo[e.target.value]);\r\n        const temp = dateInfo[e.target.value];\r\n        setNameList(Object.keys(temp));\r\n    };\r\n\r\n    const showMembers = nameList.map((each) => (\r\n        <div>\r\n            <h3>{each}</h3>\r\n            {memList[each].map((each1) => (\r\n                <span>{each1}일</span>\r\n            ))}\r\n            {/* {console.log(memList[each])} */}\r\n        </div>\r\n    ));\r\n    return (\r\n        <Container>\r\n            <select onChange={showMem}>\r\n                {nameList.length === 0 ? <option>선택</option> : <p></p>}\r\n\r\n                {selectYearMonth}\r\n            </select>\r\n\r\n            {showMembers}\r\n        </Container>\r\n    );\r\n};\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 1rem;\r\n    h3 {\r\n        color: #666666;\r\n        margin-top: 2rem;\r\n        margin-bottom: 1rem;\r\n        text-align: center;\r\n    }\r\n    span {\r\n        padding: 10px;\r\n\r\n        height: 40px;\r\n        border: none;\r\n        margin-right: 0.2rem;\r\n        margin-bottom: 0.2rem;\r\n        border-radius: 8px;\r\n        background-color: #70edb9;\r\n        color: #fff;\r\n        font-weight: 600;\r\n    }\r\n    select {\r\n        font-size: 18px;\r\n        padding: 6px;\r\n        font-weight: 600;\r\n        border-radius: 8px;\r\n        border: none;\r\n        background-color: #eefcff;\r\n    }\r\n`;\r\nexport default Records;\r\n","import React, { useState } from \"react\";\r\nimport { dbService } from \"../fbase\";\r\nimport { ModifyInput } from \"../components/ModifyInput\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst ModifyMember = ({ colName, groupData, groupName }) => {\r\n    const [newMember, setNewMember] = useState(\"\");\r\n    const [newPhone, setNewPhone] = useState(\"\");\r\n    const [newGroup, setNewGroup] = useState(\"\");\r\n    const [memName, setMemName] = useState(\"\");\r\n    const groupList = Object.keys(groupData);\r\n    groupList.sort();\r\n    const create = (props) => {\r\n        setMemName(props);\r\n    };\r\n    const selectGroup = groupList.map((group) => (\r\n        <option value={group}>{group}</option>\r\n    ));\r\n\r\n    const memberList = groupList.map(function (eachGroup) {\r\n        const member = groupData[eachGroup].map(function (each) {\r\n            return showMem(each, groupData, eachGroup);\r\n        });\r\n\r\n        return member;\r\n    });\r\n    function showMem(each, groupData, eachGroup) {\r\n        const onSubmit = async (event) => {\r\n            event.preventDefault();\r\n\r\n            groupData[newGroup].push({\r\n                name: newMember,\r\n                phone: newPhone,\r\n                korean: \"\",\r\n                group: newGroup,\r\n            });\r\n            await dbService.doc(`${colName}/Data`).set(groupData);\r\n        };\r\n        return (\r\n            <div>\r\n                {/* <h3>\r\n                    {each.name}({each.phone})\r\n                </h3> */}\r\n                <MemButton\r\n                    eachName={each.name}\r\n                    memName={memName}\r\n                    onClick={() => create(each.name)}\r\n                >\r\n                    {each.name}\r\n                </MemButton>\r\n                {each.name === memName ? (\r\n                    <Form onSubmit={onSubmit}>\r\n                        <select value={each.group}>{selectGroup}</select>\r\n\r\n                        <ModifyInput\r\n                            name=\"member\"\r\n                            placeholder={each.name}\r\n                            onChange={(e) => setNewMember(e.target.value)}\r\n                        />\r\n\r\n                        <ModifyInput\r\n                            name=\"phone\"\r\n                            type=\"phone\"\r\n                            placeholder={each.phone}\r\n                            onChange={(e) => setNewPhone(e.target.value)}\r\n                        />\r\n                        <button>Modify</button>\r\n                    </Form>\r\n                ) : null}\r\n            </div>\r\n        );\r\n    }\r\n    // const memberList = groupData[groupName].map((each) => (\r\n    //     <div>\r\n    //         <ul>\r\n    //             <div className=\"Name\">\r\n    //                 {each.name}({each.korean}\r\n    //                 {each.phone})\r\n    //             </div>\r\n    //         </ul>\r\n    //     </div>\r\n    // ));\r\n\r\n    // const addData = (groupData) => {\r\n    //     groupData.push({\r\n    //         name: newMember,\r\n    //         phone: newPhone,\r\n    //         group: newGroup,\r\n    //     });\r\n    // };\r\n    return (\r\n        <Container>\r\n            <li>{memberList}</li>\r\n            {/* <Form onSubmit={onSubmit}>\r\n                <h1>Modify Member</h1>\r\n                <Input\r\n                    name=\"member\"\r\n                    placeholder=\"Member Name\"\r\n                    onChange={(e) => setNewMember(e.target.value)}\r\n                />\r\n               \r\n                <Input\r\n                    name=\"phone\"\r\n                    type=\"phone\"\r\n                    placeholder=\"Phone Number\"\r\n                    onChange={(e) => setNewPhone(e.target.value)}\r\n                />\r\n                <button>Modify</button>\r\n            </Form> */}\r\n        </Container>\r\n    );\r\n};\r\nconst Form = styled.form`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    h1 {\r\n        color: #666666;\r\n        margin-top: 1rem;\r\n        margin-bottom: 1rem;\r\n    }\r\n    select {\r\n        /* font-size: 18px; */\r\n        padding: 6px;\r\n        font-weight: 600;\r\n        border-radius: 8px;\r\n        margin-bottom: 1rem;\r\n        height: 40px;\r\n        padding: 0 1rem;\r\n        border: none;\r\n        background-color: #f5f5f5;\r\n        transition: all 0.2s ease-in;\r\n        &:hover {\r\n            transform: translateY(-3px);\r\n        }\r\n    }\r\n    button {\r\n        width: 75%;\r\n        max-width: 110px;\r\n        min-width: 100px;\r\n        height: 40px;\r\n        border: none;\r\n        margin: 1rem, 0;\r\n        margin-bottom: 1rem;\r\n\r\n        box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n        border-radius: 8px;\r\n        background-color: #70edb9;\r\n        color: #fff;\r\n        font-weight: 600;\r\n        cursor: pointer;\r\n        transition: all 0.2s ease-in;\r\n        &:hover {\r\n            transform: translateY(-3px);\r\n        }\r\n    }\r\n`;\r\nconst MemButton = styled.button`\r\n    /* display: flex;\r\n    flex-direction: row;\r\n    align-items: center; */\r\n\r\n    width: 10%;\r\n    max-width: 110px;\r\n    min-width: 90px;\r\n    height: 50px;\r\n    border: none;\r\n    margin-right: 0.5rem;\r\n    margin-top: 0.5rem;\r\n    box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\r\n    border-radius: 8px;\r\n    background-color: #7165e3;\r\n    ${(props) =>\r\n        props.eachName === props.memName\r\n            ? css`\r\n                  background-color: #ffa689;\r\n              `\r\n            : css`\r\n                  background-color: #7165e3;\r\n              `};\r\n    color: #fff;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease-in;\r\n    &:hover {\r\n        transform: translateY(-3px);\r\n    }\r\n    &:focus {\r\n        background: #ffa689;\r\n    }\r\n`;\r\nconst Container = styled.div`\r\n    display: --webkit-flex;\r\n    display: flex;\r\n    -webkit-flex-flow: row wrap;\r\n    flex-flow: row wrap;\r\n    width: 100%;\r\n\r\n    @media (min-width: 900px) {\r\n        width: 900px;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n    }\r\n`;\r\nexport default ModifyMember;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Ul = styled.ul`\r\n    list-style: none;\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    a {\r\n        padding: 18px 10px;\r\n        text-decoration: none;\r\n        color: #0008fc;\r\n        text-transform: uppercase;\r\n        font-size: 12px;\r\n        text-align: center;\r\n        font-weight: 600;\r\n    }\r\n    @media (max-width: 768px) {\r\n        flex-flow: column nowrap;\r\n        background-color: #eefcff;\r\n        position: fixed;\r\n        transform: ${({ open }) =>\r\n            open ? \"translateX(0)\" : \"translateX(100%)\"};\r\n        top: 0;\r\n        right: 0;\r\n        height: 100vh;\r\n        width: 150px;\r\n        padding-top: 3.5rem;\r\n        transition: transform 0.3s ease-in-out;\r\n        a {\r\n            color: #13a326;\r\n            text-transform: uppercase;\r\n            font-size: 12px;\r\n            text-align: center;\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n\r\nconst RightNav = ({ open }) => {\r\n    return (\r\n        <Ul open={open}>\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/profile\">Profile</Link>\r\n            <Link to=\"/edit\">Edit</Link>\r\n            {/* <Link to=\"/about\">List</Link> */}\r\n            <Link to=\"/records\">Records</Link>\r\n            {/* <li>Sign Up</li> */}\r\n        </Ul>\r\n    );\r\n};\r\n\r\nexport default RightNav;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport RightNav from \"./RightNav\";\r\n\r\nconst StyledBurger = styled.div`\r\n    width: 2rem;\r\n    height: 2rem;\r\n    position: fixed;\r\n    top: 15px;\r\n    right: 20px;\r\n    z-index: 20;\r\n    display: none;\r\n    @media (max-width: 768px) {\r\n        display: flex;\r\n        justify-content: space-around;\r\n        flex-flow: column nowrap;\r\n    }\r\n    div {\r\n        width: 2rem;\r\n        height: 0.25rem;\r\n        background-color: ${({ open }) => (open ? \"#ccc\" : \"#333\")};\r\n        border-radius: 10px;\r\n        transform-origin: 1px;\r\n        transition: all 0.3s linear;\r\n        &:nth-child(1) {\r\n            transform: ${({ open }) => (open ? \"rotate(45deg)\" : \"rotate(0)\")};\r\n        }\r\n        &:nth-child(2) {\r\n            transform: ${({ open }) =>\r\n                open ? \"translateX(100%)\" : \"translateX(0)\"};\r\n            opacity: ${({ open }) => (open ? 0 : 1)};\r\n        }\r\n        &:nth-child(3) {\r\n            transform: ${({ open }) => (open ? \"rotate(-45deg)\" : \"rotate(0)\")};\r\n        }\r\n    }\r\n`;\r\n\r\nconst Burger = () => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <StyledBurger open={open} onClick={() => setOpen(!open)}>\r\n                <div />\r\n                <div />\r\n                <div />\r\n            </StyledBurger>\r\n            <RightNav open={open} />\r\n        </>\r\n    );\r\n};\r\nexport default Burger;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Burger from \"./Burger\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Nav = styled.nav`\r\n    width: 100%;\r\n    height: 55px;\r\n    border-bottom: 2px solid #f1f1f1;\r\n    padding: 0 20px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    .logo {\r\n        padding: 15px 0;\r\n        color: #48484d;\r\n        font-size: 25px;\r\n        font-weight: 600;\r\n        text-decoration: none;\r\n    }\r\n`;\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <Nav>\r\n            <Link to=\"/\" className=\"logo\">\r\n                MY TREE ENGLISH\r\n            </Link>\r\n\r\n            <Burger />\r\n        </Nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Profile from \"../routes/Profile\";\r\nimport Edit from \"../routes/Edit\";\r\nimport Records from \"../routes/Records\";\r\nimport About from \"../routes/About\";\r\n// import Navigation from \"./Navigation\";\r\nimport Navbar from \"../nav/Navbar\";\r\nimport styled from \"styled-components\";\r\n// import \"./App.css\";\r\n\r\nconst AppRouter = ({\r\n    isLoggedIn,\r\n    userObj,\r\n    group,\r\n    groupData,\r\n    colName,\r\n    profile,\r\n    dateInfo,\r\n}) => {\r\n    return (\r\n        <Router>\r\n            {/* {isLoggedIn && <Navigation />} */}\r\n            {isLoggedIn && <Navbar />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <Container>\r\n                        <Route exact path=\"/\">\r\n                            <Home\r\n                                userObj={userObj}\r\n                                group={group}\r\n                                groupData={groupData}\r\n                                colName={colName}\r\n                                profile={profile}\r\n                                dateInfo={dateInfo}\r\n                            />\r\n                        </Route>\r\n                        <Route exact path=\"/about\">\r\n                            <About\r\n                                group={group}\r\n                                groupData={groupData}\r\n                                colName={colName}\r\n                            />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile colName={colName} profile={profile} />\r\n                        </Route>\r\n                        <Route exact path=\"/edit\">\r\n                            <Edit\r\n                                group={group}\r\n                                groupData={groupData}\r\n                                colName={colName}\r\n                                dateInfo={dateInfo}\r\n                            />\r\n                        </Route>\r\n                        <Route exact path=\"/records\">\r\n                            <Records\r\n                                group={group}\r\n                                groupData={groupData}\r\n                                colName={colName}\r\n                                dateInfo={dateInfo}\r\n                            />\r\n                        </Route>\r\n                        {/* <Route exact path=\"/editClass\">\r\n                            <EditClass\r\n                                group={group}\r\n                                groupData={groupData}\r\n                                colName={colName}\r\n                            />\r\n                        </Route> */}\r\n                        {/* <Route exact path=\"/editMem\">\r\n                            <EditMem\r\n                                group={group}\r\n                                groupData={groupData}\r\n                                colName={colName}\r\n                            />\r\n                        </Route> */}\r\n                    </Container>\r\n                ) : (\r\n                    <Container>\r\n                        <Route exact path=\"/\">\r\n                            <Auth />\r\n                        </Route>\r\n                    </Container>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\nconst Container = styled.div`\r\n    padding: 30px;\r\n    min-width: 350px;\r\n`;\r\n\r\nexport default AppRouter;\r\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService, dbService } from \"../fbase\";\nimport styled from \"styled-components\";\n// import bgImg from \"../assets/bg.png\";\n\nconst App = () => {\n    const [init, setInit] = useState(false);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [userObj, setUserObj] = useState(null);\n    const [colName, setColName] = useState(\"\");\n    const [group, setGroup] = useState(false);\n    const [groupData, setGroupData] = useState([]);\n\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if (user) {\n                setIsLoggedIn(true);\n                setUserObj(user);\n            } else {\n                setIsLoggedIn(false);\n            }\n            setInit(true);\n        });\n    }, [isLoggedIn]);\n    useEffect(() => {\n        if (userObj !== null) {\n            setColName(userObj.uid.substring(0, 9));\n        }\n    }, [userObj]);\n    useEffect(() => {\n        if (colName !== \"\") {\n            dbService.collection(colName).onSnapshot((snapshot) => {\n                const colNameArray = snapshot.docs.map((doc) => ({\n                    ...doc.data(),\n                }));\n\n                setGroupData(colNameArray);\n                if (colNameArray.length !== 0) {\n                    setGroup(true);\n                }\n            });\n            // dbService\n            //     .collection(colName)\n            //     .doc(\"Profile\")\n            //     .onSnapshot((snapshot) => {\n            //         const profileInfo = snapshot.docs.map((doc) => ({\n            //             ...doc.data(),\n            //             // id: doc.id,\n            //         }));\n\n            //         setProfile(profileInfo);\n            //     });\n        }\n    }, [colName]);\n\n    return (\n        <Container>\n            <Wrapper>\n                {init ? (\n                    <AppRouter\n                        isLoggedIn={isLoggedIn}\n                        userObj={userObj}\n                        groupData={groupData[0]}\n                        profile={groupData[2]}\n                        dateInfo={groupData[1]}\n                        colName={colName}\n                        group={group}\n                    />\n                ) : (\n                    \"Initializing...\"\n                )}\n                {/* <div className=\"footer\"> */}\n                {/* <footer>&copy; {new Date().getFullYear()} 2nd-deck</footer> */}\n                {/* </div> */}\n            </Wrapper>\n        </Container>\n    );\n};\n\nconst Container = styled.div`\n    background: #ffffff;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n`;\nconst Wrapper = styled.div`\n    /* background-position: center; */\n    /* background-size: cover; */\n    /* background-repeat: no-repeat; */\n    /* background-attachment: fixed; */\n    width: 100%;\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}