{"version":3,"sources":["fbase.js","routes/Auth.js","components/AddMember.js","components/DelMember.js","components/Send.js","components/MemList.js","components/AddClass.js","components/DelClass.js","components/ClassList.js","components/New.js","routes/Home.js","routes/Profile.js","routes/Edit.js","routes/About.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","authService","auth","dbService","firestore","firebaseInstance","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","AddMember","colName","groupData","groupName","newMember","setNewMember","newPhone","setNewPhone","newKorean","setNewKorean","push","phone","korean","group","doc","set","DelMember","eachName","deleteMem","idx","findIndex","item","splice","Send","console","log","myHeaders","Headers","append","raw","JSON","stringify","myphone","phoneNum","fetch","method","headers","body","redirect","then","response","text","result","catch","MemList","mode","send","profile","memberList","map","each","AddClass","classGroup","setClassGroup","collection","merge","DelClass","history","useHistory","deleteClass","update","FieldValue","delete","ClassList","setGroupName","groupList","Object","keys","sort","listGroups","eachGroup","create","New","userObj","uid","substring","createNew","Home","coleName","Profile","myPhoneInfo","setMyPhoneInfo","messageInfo","setMessageInfo","signOut","Edit","About","props","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setIsLoggedIn","setUserObj","setColName","setGroup","setGroupData","useEffect","onAuthStateChanged","user","onSnapshot","snapshot","colNameArray","docs","data","length","Date","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2119537.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n//   create-react-app으로 만들어 환경변수를 사용하려면 REACT_APP_'환경변수'로 해야한다.\r\n// git ignore에 .env를 추가해서 github에 추가되는것을 막는다. 빌드하면 결국은 변환되어 값이 나타나므로 보안사항은 아니고\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const firebaseInstance = firebase;","import { authService} from \"../fbase\";\r\nimport React, { useState } from \"react\";\r\nimport \"./Auth.css\";\r\n\r\nconst Auth = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {target : {name, value},} = event;\r\n        if (name === \"email\"){\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <form onSubmit={onSubmit} className=\"container1\">\r\n                <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\" />\r\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\" />\r\n                <input type=\"submit\" className=\"authInput authSubmit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sing In\" : \"Create Account\" }\r\n            </span>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Auth;","import React, { useState } from \"react\";\r\nimport { dbService } from \"../fbase\";\r\n\r\nconst AddMember = ({ colName, groupData, groupName }) => {\r\n    const [newMember, setNewMember] = useState(\"\");\r\n    const [newPhone, setNewPhone] = useState(\"\");\r\n    const [newKorean, setNewKorean] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if (name === \"member\") {\r\n            setNewMember(value);\r\n        } else if (name === \"phone\") {\r\n            setNewPhone(value);\r\n        } else if (name === \"koreanName\") {\r\n            setNewKorean(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        groupData[groupName].push({\r\n            name: newMember,\r\n            phone: newPhone,\r\n            korean: newKorean,\r\n            group: groupName,\r\n        });\r\n        await dbService.doc(`${colName}/Data`).set(groupData);\r\n    };\r\n\r\n    // const addData = (groupData) => {\r\n    //     groupData.push({\r\n    //         name: newMember,\r\n    //         phone: newPhone,\r\n    //         group: newGroup,\r\n    //     });\r\n    // };\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    name=\"member\"\r\n                    placeholder=\"Member Name\"\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    name=\"koreanName\"\r\n                    placeholder=\"실명\"\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    name=\"phone\"\r\n                    placeholder=\"Phone Number\"\r\n                    onChange={onChange}\r\n                />\r\n\r\n                <input type=\"submit\" value=\"Add\" />\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddMember;\r\n","import React from \"react\";\r\nimport { dbService } from \"../fbase\";\r\n\r\nconst DelMember = ({ colName, groupName, groupData, eachName }) => {\r\n    const deleteMem = async (event) => {\r\n        event.preventDefault();\r\n\r\n        //네임을 비교하여 같으면 삭제\r\n        const idx = groupData[groupName].findIndex(function (item) {\r\n            return item.name === eachName;\r\n        });\r\n        if (idx > -1) groupData[groupName].splice(idx, 1);\r\n\r\n        await dbService.doc(`${colName}/Data`).set(groupData);\r\n    };\r\n    return (\r\n        <div>\r\n            <button onClick={deleteMem}>삭제</button>{\" \"}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DelMember;\r\n","import React from \"react\";\r\n\r\nconst Send = () => {\r\n    console.log(\"send?\");\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    var raw = JSON.stringify({\r\n        myphone: \"01066860366\",\r\n        phoneNum: \"01066860366\",\r\n        message: \" 학생 출석하였습니다.\",\r\n    });\r\n\r\n    var requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n    };\r\n\r\n    fetch(\r\n        \"https://us-central1-attendance-6c507.cloudfunctions.net/send\",\r\n        // \"http://localhost:5001/attendance-6c507/us-central1/send\",\r\n        requestOptions\r\n    )\r\n        .then((response) => response.text())\r\n        .then((result) => console.log(result))\r\n        .catch((error) => console.log(\"error\", error));\r\n    return <div>굿</div>;\r\n};\r\n\r\nexport default Send;\r\n","import React from \"react\";\r\nimport AddMember from \"./AddMember\";\r\nimport DelMember from \"./DelMember\";\r\nimport Send from \"./Send\";\r\n\r\nconst MemList = ({ colName, groupData, groupName, mode, profile }) => {\r\n    // let memeberList;\r\n    const send = () => {\r\n        console.log(\"send clicked\");\r\n        Send();\r\n    };\r\n    const memberList = groupData[groupName].map((each) => (\r\n        <div>\r\n            <ul>\r\n                {mode === \"edit\" ? (\r\n                    <div>\r\n                        {each.name}({each.korean}\r\n                        {each.phone})\r\n                        <DelMember\r\n                            groupData={groupData}\r\n                            colName={colName}\r\n                            groupName={groupName}\r\n                            eachName={each.name}\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                    <button onClick={send}>{each.name}</button>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    ));\r\n\r\n    return (\r\n        <div>\r\n            {mode === \"edit\" ? (\r\n                <div>\r\n                    <div>Edit Member</div>\r\n                    <ul>{memberList}</ul>\r\n                    <AddMember\r\n                        colName={colName}\r\n                        groupData={groupData}\r\n                        groupName={groupName}\r\n                    />\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <ul>{memberList}</ul>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nexport default MemList;\r\n","import React, { useState } from \"react\";\r\nimport { dbService } from \"../fbase\";\r\n\r\nconst AddClass = ({ colName, groupData }) => {\r\n    const [classGroup, setClassGroup] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        setClassGroup(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService\r\n            .collection(colName)\r\n            .doc(\"Data\")\r\n            .set(\r\n                {\r\n                    [classGroup]: [],\r\n                },\r\n                { merge: true }\r\n            );\r\n    };\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    name=\"classGroup\"\r\n                    placeholder=\"Class Name\"\r\n                    onChange={onChange}\r\n                />\r\n                <input type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddClass;\r\n","import React from \"react\";\r\nimport { dbService, firebaseInstance } from \"../fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst DelClass = ({ colName, groupName, groupData }) => {\r\n    const history = useHistory();\r\n    const deleteClass = async (event) => {\r\n        event.preventDefault();\r\n\r\n        //네임을 비교하여 같으면 삭제\r\n        await dbService.doc(`${colName}/Data`).update({\r\n            [groupName]: firebaseInstance.firestore.FieldValue.delete(),\r\n        });\r\n\r\n        history.push(\"/edit\");\r\n    };\r\n    return (\r\n        <div>\r\n            <button onClick={deleteClass}>삭제</button>{\" \"}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DelClass;\r\n","import React, { useState } from \"react\";\r\nimport MemList from \"./MemList\";\r\nimport AddClass from \"../components/AddClass\";\r\nimport DelClass from \"../components/DelClass\";\r\n\r\nconst ClassList = ({ group, groupData, colName, mode, profile }) => {\r\n    //key값 나열\r\n    const [groupName, setGroupName] = useState(\"\");\r\n    const groupList = Object.keys(groupData);\r\n    groupList.sort();\r\n    const create = (eachGroup) => {\r\n        setGroupName(eachGroup);\r\n    };\r\n    const listGroups = groupList.map((eachGroup) => (\r\n        <button onClick={() => create(eachGroup)}>{eachGroup}</button>\r\n    ));\r\n\r\n    return (\r\n        <>\r\n            <ul>{listGroups}</ul>\r\n            {mode === \"edit\" ? (\r\n                <div>\r\n                    <AddClass\r\n                        group={group}\r\n                        groupData={groupData}\r\n                        colName={colName}\r\n                    />\r\n\r\n                    {groupName}\r\n                </div>\r\n            ) : (\r\n                <div>{groupName}</div>\r\n            )}\r\n            {mode === \"edit\" && groupName ? (\r\n                <DelClass\r\n                    groupData={groupData}\r\n                    colName={colName}\r\n                    groupName={groupName}\r\n                />\r\n            ) : (\r\n                \"\"\r\n            )}\r\n\r\n            <div>\r\n                {groupName}\r\n\r\n                {groupData[groupName] ? (\r\n                    <MemList\r\n                        groupName={groupName}\r\n                        colName={colName}\r\n                        groupData={groupData}\r\n                        mode={mode}\r\n                        profile={profile}\r\n                    />\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nexport default ClassList;\r\n","import { dbService } from \"../fbase\";\r\nimport React from \"react\";\r\n\r\nconst New = ({ userObj }) => {\r\n    const colName = userObj.uid.substring(0, 9);\r\n    const createNew = async () => {\r\n        await dbService.collection(colName).doc(\"Data\").set({});\r\n        await dbService.collection(colName).doc(\"Profile\").set({\r\n            myphone: \"My Phone Number\",\r\n            message: \" 학생이 출석 하였습니다.\",\r\n        });\r\n    };\r\n    return (\r\n        <div>\r\n            <button onClick={createNew}>시작하기</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default New;\r\n","import React, { useState } from \"react\";\r\nimport \"./Home.css\";\r\nimport ClassList from \"../components/ClassList\";\r\nimport New from \"../components/New\";\r\n\r\nconst Home = ({ userObj, group, groupData, colName, profile }) => {\r\n    const mode = \"send\";\r\n    return (\r\n        <>\r\n            {group ? (\r\n                <div>\r\n                    <ClassList\r\n                        group={group}\r\n                        groupData={groupData}\r\n                        coleName={colName}\r\n                        mode={mode}\r\n                        profile={profile}\r\n                    />\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <New userObj={userObj} />\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import { authService, dbService } from \"../fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// import \"./Profile.css\";\r\n\r\nconst Profile = ({ colName, profile }) => {\r\n    const history = useHistory();\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    const [myPhoneInfo, setMyPhoneInfo] = useState(\"\");\r\n    const [messageInfo, setMessageInfo] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if (name === \"myphone\") {\r\n            setMyPhoneInfo(value);\r\n        } else if (name === \"message\") {\r\n            setMessageInfo(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        await dbService.doc(`${colName}/Profile`).set({\r\n            myphone: myPhoneInfo,\r\n            message: messageInfo,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                My Phone Number: {profile.myphone}\r\n                Message: {profile.message}\r\n            </div>\r\n            <div>\r\n                <form onSubmit={onSubmit}>\r\n                    <input\r\n                        name=\"myphone\"\r\n                        placeholder={profile.myphone}\r\n                        onChange={onChange}\r\n                    />\r\n                    <input\r\n                        name=\"message\"\r\n                        placeholder={profile.message}\r\n                        onChange={onChange}\r\n                    />\r\n\r\n                    <input type=\"submit\" value=\"Change\" />\r\n                </form>\r\n            </div>\r\n            <div>\r\n                <button onClick={onLogOutClick}>Log Out</button>\r\n            </div>\r\n            {/* <div>\r\n                <Link to=\"/editClass\">\r\n                    <span>Edit Class</span>\r\n                </Link>\r\n              \r\n            </div> */}\r\n        </>\r\n    );\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport ClassList from \"../components/ClassList\";\r\nconst Edit = ({ group, groupData, colName }) => {\r\n    const mode = \"edit\";\r\n    return (\r\n        <>\r\n            <div>\r\n                <ClassList\r\n                    group={group}\r\n                    groupData={groupData}\r\n                    colName={colName}\r\n                    mode={mode}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Edit;\r\n","import React from \"react\";\r\nimport \"./About.css\";\r\n\r\n\r\nfunction About(props) {\r\n  return (\r\n    <div className=\"about__container\">\r\n      <span>2nd Deck </span>\r\n      <span> :)</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <div className=\"nav\">\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/profile\">Profile</Link>\r\n            <Link to=\"/edit\">Edit</Link>\r\n            <Link to=\"/about\">About</Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Profile from \"../routes/Profile\";\r\nimport Edit from \"../routes/Edit\";\r\nimport About from \"../routes/About\";\r\nimport Navigation from \"./Navigation\";\r\nimport \"./App.css\";\r\n\r\nconst AppRouter = ({\r\n    isLoggedIn,\r\n    userObj,\r\n    group,\r\n    groupData,\r\n    colName,\r\n    profile,\r\n}) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Home\r\n                                userObj={userObj}\r\n                                group={group}\r\n                                groupData={groupData}\r\n                                colName={colName}\r\n                                profile={profile}\r\n                            />\r\n                        </Route>\r\n                        <Route exact path=\"/about\">\r\n                            <About />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile colName={colName} profile={profile} />\r\n                        </Route>\r\n                        <Route exact path=\"/edit\">\r\n                            <Edit\r\n                                group={group}\r\n                                groupData={groupData}\r\n                                colName={colName}\r\n                            />\r\n                        </Route>\r\n                        {/* <Route exact path=\"/editClass\">\r\n                            <EditClass\r\n                                group={group}\r\n                                groupData={groupData}\r\n                                colName={colName}\r\n                            />\r\n                        </Route> */}\r\n                        {/* <Route exact path=\"/editMem\">\r\n                            <EditMem\r\n                                group={group}\r\n                                groupData={groupData}\r\n                                colName={colName}\r\n                            />\r\n                        </Route> */}\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Auth />\r\n                        </Route>\r\n                    </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService, dbService } from \"../fbase\";\n\nconst App = () => {\n    const [init, setInit] = useState(false);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [userObj, setUserObj] = useState(null);\n    const [colName, setColName] = useState(\"\");\n    const [group, setGroup] = useState(false);\n    const [groupData, setGroupData] = useState([]);\n\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if (user) {\n                setIsLoggedIn(true);\n                setUserObj(user);\n            } else {\n                setIsLoggedIn(false);\n            }\n            setInit(true);\n        });\n    }, []);\n    useEffect(() => {\n        if (userObj !== null) {\n            setColName(userObj.uid.substring(0, 9));\n        }\n    }, [userObj]);\n    useEffect(() => {\n        if (colName !== \"\") {\n            dbService.collection(colName).onSnapshot((snapshot) => {\n                const colNameArray = snapshot.docs.map((doc) => ({\n                    ...doc.data(),\n                }));\n\n                setGroupData(colNameArray);\n                if (colNameArray.length !== 0) {\n                    setGroup(true);\n                }\n            });\n            // dbService\n            //     .collection(colName)\n            //     .doc(\"Profile\")\n            //     .onSnapshot((snapshot) => {\n            //         const profileInfo = snapshot.docs.map((doc) => ({\n            //             ...doc.data(),\n            //             // id: doc.id,\n            //         }));\n\n            //         setProfile(profileInfo);\n            //     });\n        }\n    }, [colName]);\n\n    return (\n        <>\n            {init ? (\n                <AppRouter\n                    isLoggedIn={isLoggedIn}\n                    userObj={userObj}\n                    groupData={groupData[0]}\n                    profile={groupData[1]}\n                    colName={colName}\n                    group={group}\n                />\n            ) : (\n                \"Initializing...\"\n            )}\n            <div className=\"footer\">\n                <footer>&copy; {new Date().getFullYear()} 2nd-deck</footer>\n            </div>\n        </>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}